// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Epilogger.Web.Controllers {
    public partial class ImageController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ImageController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected ImageController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult UploadFromFile() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.UploadFromFile);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ImageController Actions { get { return MVC.Image; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Image";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Image";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string Upload = "Upload";
            public readonly string UploadFromFile = "UploadFromFile";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants {
            public const string Upload = "Upload";
            public const string UploadFromFile = "UploadFromFile";
        }


        static readonly ActionParamsClass_UploadFromFile s_params_UploadFromFile = new ActionParamsClass_UploadFromFile();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UploadFromFile UploadFromFileParams { get { return s_params_UploadFromFile; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UploadFromFile {
            public readonly string id = "id";
            public readonly string files = "files";
        }
        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string Upload = "~/Views/Image/Upload.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_ImageController: Epilogger.Web.Controllers.ImageController {
        public T4MVC_ImageController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult Upload() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Upload);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult UploadFromFile(string id, System.Collections.Generic.IEnumerable<System.Web.HttpPostedFileBase> files) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.UploadFromFile);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("files", files);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591
