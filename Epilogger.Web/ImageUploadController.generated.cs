// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Epilogger.Web.Controllers {
    public partial class ImageUploadController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ImageUploadController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected ImageUploadController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult ChooseUploadSource() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.ChooseUploadSource);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult UploadFromComputer() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.UploadFromComputer);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult GetFacebookAlbums() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.GetFacebookAlbums);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult UploadFacebookAlbumPhotos() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.UploadFacebookAlbumPhotos);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult AuthenticateFlickr() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.AuthenticateFlickr);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult SuccessfullyAuthenticatedFlickr() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.SuccessfullyAuthenticatedFlickr);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult UploadFlickrImages() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.UploadFlickrImages);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ImageUploadController Actions { get { return MVC.ImageUpload; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "ImageUpload";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "ImageUpload";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string ChooseUploadSource = "ChooseUploadSource";
            public readonly string UploadFromComputer = "UploadFromComputer";
            public readonly string GetFacebookAlbums = "GetFacebookAlbums";
            public readonly string UploadFacebookAlbumPhotos = "UploadFacebookAlbumPhotos";
            public readonly string AuthenticateFlickr = "AuthenticateFlickr";
            public readonly string SuccessfullyAuthenticatedFlickr = "SuccessfullyAuthenticatedFlickr";
            public readonly string UploadFlickrImages = "UploadFlickrImages";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants {
            public const string ChooseUploadSource = "ChooseUploadSource";
            public const string UploadFromComputer = "UploadFromComputer";
            public const string GetFacebookAlbums = "GetFacebookAlbums";
            public const string UploadFacebookAlbumPhotos = "UploadFacebookAlbumPhotos";
            public const string AuthenticateFlickr = "AuthenticateFlickr";
            public const string SuccessfullyAuthenticatedFlickr = "SuccessfullyAuthenticatedFlickr";
            public const string UploadFlickrImages = "UploadFlickrImages";
        }


        static readonly ActionParamsClass_ChooseUploadSource s_params_ChooseUploadSource = new ActionParamsClass_ChooseUploadSource();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ChooseUploadSource ChooseUploadSourceParams { get { return s_params_ChooseUploadSource; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ChooseUploadSource {
            public readonly string id = "id";
            public readonly string status = "status";
        }
        static readonly ActionParamsClass_UploadFromComputer s_params_UploadFromComputer = new ActionParamsClass_UploadFromComputer();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UploadFromComputer UploadFromComputerParams { get { return s_params_UploadFromComputer; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UploadFromComputer {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_GetFacebookAlbums s_params_GetFacebookAlbums = new ActionParamsClass_GetFacebookAlbums();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetFacebookAlbums GetFacebookAlbumsParams { get { return s_params_GetFacebookAlbums; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetFacebookAlbums {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_UploadFacebookAlbumPhotos s_params_UploadFacebookAlbumPhotos = new ActionParamsClass_UploadFacebookAlbumPhotos();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UploadFacebookAlbumPhotos UploadFacebookAlbumPhotosParams { get { return s_params_UploadFacebookAlbumPhotos; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UploadFacebookAlbumPhotos {
            public readonly string id = "id";
            public readonly string albumId = "albumId";
        }
        static readonly ActionParamsClass_AuthenticateFlickr s_params_AuthenticateFlickr = new ActionParamsClass_AuthenticateFlickr();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AuthenticateFlickr AuthenticateFlickrParams { get { return s_params_AuthenticateFlickr; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AuthenticateFlickr {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_SuccessfullyAuthenticatedFlickr s_params_SuccessfullyAuthenticatedFlickr = new ActionParamsClass_SuccessfullyAuthenticatedFlickr();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SuccessfullyAuthenticatedFlickr SuccessfullyAuthenticatedFlickrParams { get { return s_params_SuccessfullyAuthenticatedFlickr; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SuccessfullyAuthenticatedFlickr {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_UploadFlickrImages s_params_UploadFlickrImages = new ActionParamsClass_UploadFlickrImages();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UploadFlickrImages UploadFlickrImagesParams { get { return s_params_UploadFlickrImages; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UploadFlickrImages {
            public readonly string id = "id";
        }
        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string _Layout = "~/Views/ImageUpload/_Layout.cshtml";
            public readonly string AuthenticateFlickr = "~/Views/ImageUpload/AuthenticateFlickr.cshtml";
            public readonly string ChooseUploadSource = "~/Views/ImageUpload/ChooseUploadSource.cshtml";
            public readonly string GetFacebookAlbums = "~/Views/ImageUpload/GetFacebookAlbums.cshtml";
            public readonly string SuccessfullyAuthenticatedFlickr = "~/Views/ImageUpload/SuccessfullyAuthenticatedFlickr.cshtml";
            public readonly string UploadFacebookAlbumPhotos = "~/Views/ImageUpload/UploadFacebookAlbumPhotos.cshtml";
            public readonly string UploadFlickrImages = "~/Views/ImageUpload/UploadFlickrImages.cshtml";
            public readonly string UploadFromComputer = "~/Views/ImageUpload/UploadFromComputer.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_ImageUploadController: Epilogger.Web.Controllers.ImageUploadController {
        public T4MVC_ImageUploadController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult ChooseUploadSource(string id, int? status) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ChooseUploadSource);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("status", status);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult UploadFromComputer(string id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.UploadFromComputer);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult UploadFromComputer(string id, System.Collections.Generic.IEnumerable<System.Web.HttpPostedFileBase> files) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.UploadFromComputer);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("files", files);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult GetFacebookAlbums(string id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.GetFacebookAlbums);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult UploadFacebookAlbumPhotos(string id, string albumId) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.UploadFacebookAlbumPhotos);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("albumId", albumId);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult UploadFacebookAlbumPhotos(string id, string albumId, System.Collections.Generic.IEnumerable<string> photosUrls) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.UploadFacebookAlbumPhotos);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("albumId", albumId);
            callInfo.RouteValueDictionary.Add("photosUrls", photosUrls);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult AuthenticateFlickr(string id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.AuthenticateFlickr);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult SuccessfullyAuthenticatedFlickr(string id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.SuccessfullyAuthenticatedFlickr);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult UploadFlickrImages(string id) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.UploadFlickrImages);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591
