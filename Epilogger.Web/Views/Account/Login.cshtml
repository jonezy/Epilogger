@model Epilogger.Web.Models.LoginModel
@{
    ViewBag.Title = "Epilogger | Login";
    Layout = Model.InPopUp ? "~/Views/Shared/_PopupLayout.cshtml" : "~/Views/Shared/_InteriorLayoutNoBC.cshtml";
}

<div>
    
    @if (Model.InPopUp)
    {
        <div class="spacer"></div>
        <div class="signUpHeading center">
            <h1>Login to take full advantage of Epilogger.</h1>
        </div>
    
        <div class="spacer"></div>
    }
    <ul class="authButtons">
        <li>@Html.ActionImage("ConnectRequestWithCallback", "twitter", new { area = "Authentication", callBackUrl = Url.Action("twitter", "join", new { Model.InPopUp }, "http") }, "/Public/images/signup/twitterButton.png", "Sign in with twitter")</li>
        @if (!Model.InPopUp)
        {
            <li class="orSepertor"><em>-- or --</em></li>
            <li>@Html.ActionImage("ConnectRequestWithCallback", "facebook", new { area = "Authentication", callBackUrl = Url.Action("facebook", "join", new { Model.InPopUp }, "http") }, "/Public/images/signup/facebookButton.png", "Sign in with facebook")</li>
        }
    </ul>

    
    <div class="spacer"></div>
    <div class="spacer"></div>
        
    
    
    <div id="emailAccountLine">
        
        @using (Html.BeginForm())
        {
       
            <div class="createFormFields loginFormFields">
                <fieldset class="">
                    <div class="createFormField loginFormField">
                        @Html.TextBoxFor(model => model.Username, new { @class = "blur", title = "Username" }) 
                        @*@Html.ValidationMessageFor(model => model.Username)*@
                    </div>
                    <div class="createFormField loginFormField">
                        <input type="text" class="" id="txtPlainPassword" title="Password" value="Password" style="color: #ccc !important;"/>
                        @Html.PasswordFor(model => model.Password, new { @class = "blur", title = "Password", id = "Password" })
                        @*@Html.ValidationMessageFor(model => model.Password)*@
                    </div>
                </fieldset>
                @*@Html.ValidationSummary()*@
                @Html.Raw(Html.MyValidationSummary())

                <div class="loginText">
                    <input type="submit" class="blue-action-button createAccounstSubmit submitForm" value="Login" />
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Html.ActionLink("Forgot your password?", "ForgotPassword", "account")
                </div>
                <div class="orSepertor"><em>-- or --</em></div>
                @Html.ActionLink("Create an account", "signup", "join", new { Model.InPopUp }, null)
            </div>
            @Html.HiddenFor(model => Model.ReturnUrl)
            @Html.HiddenFor(model => Model.InPopUp)
        }
        

    </div>

</div>



<script type="text/javascript">

    function submitForm() {
        $(".submitForm").addClass("disabled");
        $(".submitForm").attr('disabled', 'disabled');
        $("#createAccountWait").show();
        $("form").submit();
    }

    $("#txtPlainPassword").show();
    $("#Password").hide();

    $("#txtPlainPassword").focus(function () {
        $(this).hide();
        $("#Password").show();
        $("#Password").focus();
    });

    $("#Password").blur(function () {
        if ($(this).val().length == 0) {
            $(this).hide();
            $("#txtPlainPassword").show();
        }
    });


</script>
