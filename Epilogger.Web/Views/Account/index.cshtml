@using Combres.Mvc
@model Epilogger.Web.Models.AccountModel

@{
    Layout = "~/Views/Shared/_InteriorLayoutNoBC.cshtml";
    ViewBag.Title = "Epilogger | Create Account";
}

@Html.CombresLink("CreateAccountJs")
@Html.CombresLink("CreateAccountCss")


<div class="AccountPage">
    <div class="signUpHeading">
        <h1>Profile & Settings</h1>
    </div>
    
    <div class="spacer"></div>
    
    @*@Html.ValidationSummary("Please correct the following issues")*@
    @using (Html.BeginForm())
    {
       
        <div class="avatarSection">
            <div class="profileTitle">Avatar:</div>    
            
            <div class="avatarSelectSection">
                <div class="createProfilePicture    ">
                    <img id="theProfileImage" src="@Model.ProfilePicture" alt="Avatar" width="250px" />
                </div>
                
                <ul class="avatarSelect">
                    <li class="fromHD">
                        @Html.RadioButton("profileImageSource", "HD") From my hard drive<br /><span class="uploadFormatting">(<span id="uploadavator"></span>)</span>
                    </li>
                    <li class="fromTwitter">
                        @Html.RadioButton("profileImageSource", "TW")
                    </li>
                    <li class="fromFacebook">
                        @Html.RadioButton("profileImageSource", "FB")
                    </li>
                </ul>
                
                
            
            </div>
        </div>
        
        <div class="spacer"></div>
        <div class="spacer"></div>
        
        <div class="profileSection">
            
            <div class="profileFormFields">
                <fieldset class="">
                    <div class="profileTitle">Name:</div>
                    <div class="createFormField">
                        <div class="createFormLeft">
                            @Html.TextBoxFor(model => model.FirstName, new { title = "First Name" }) 
                            @Html.ValidationMessageFor(model => model.FirstName)
                        </div>    
                    
                        <div class="createFormRight">
                            @Html.TextBoxFor(model => model.LastName, new { title = "Last Name" }) 
                            @Html.ValidationMessageFor(model => model.LastName)
                        </div>

                    </div>
                    
                    <div class="profileTitle">E-mail:</div>
                    <div class="createFormField">
                        @Html.TextBoxFor(model => model.EmailAddress, new { title = "Email Address" }) 
                        @Html.ValidationMessageFor(model => model.EmailAddress)
                        <div id="emailCheck"></div>
                    </div>
                    

                    <div class="profileTitle">Birthday:</div>
                    <div class="createFormField">
                        @Html.DropDownList("m_DOB", Enumerable.Range(1, 12).Select(i => new SelectListItem { Value = i.ToString(), Text = System.Globalization.CultureInfo.InvariantCulture.DateTimeFormat.GetMonthName(i) }), "Month")
                        @Html.DropDownList("d_DOB", Enumerable.Range(1, 31).Select(i => new SelectListItem { Value = i.ToString(), Text = i.ToString() }), "Day")
                        @Html.DropDownList("y_DOB", Enumerable.Range(1920, (DateTime.UtcNow.Year - 1920)).Reverse().Select(i => new SelectListItem { Value = i.ToString(), Text = i.ToString() }), "Year")
                        <div class="profileTitle">&nbsp;</div>(Don't worry. We won't show this.)
                    </div>
                    
                    
                    
                    <div class="profileTitle">Password:</div>
                    <div class="createFormField">
                        <input type="text" class="" id="txtPlainPassword" title="Set a new password" value="Set a new password" style="color: #ccc !important;"/>
                        @Html.PasswordFor(model => model.Password, new { @class = "", title = "", id = "Password" })
                    </div>

                </fieldset>
                
                @Html.ValidationSummary()
                
                <div class="seperator"></div>
                <div class="spacer"></div>
                
                <div>
                    <h2>Connect with Social Media</h2>
                    <div class="spacer"></div>
                    

                    <ul class="connectAccountsSection">
                        @if (Model.facebookUser == null)
                        {
                            <li>
                                <div class="serviceThumb">
                                    <img src="/Public/images/icons/facebookThumb.png" alt="Facebook" />
                                </div>
                                <input type="button" class="blue-action-button" value="Connect Facebook" />
                                <div class="connectDescription">
                                    Like items<br />
                                    &nbsp;
                                </div>
                            </li>    
                        }
                        else
                        {
                            <li>
                                <div class="serviceThumb">
                                    <img src="/Public/images/icons/facebookThumb.png" alt="Facebook" />
                                </div>
                                
                                <div class="connectedDescription">
                                    Connected as:<br />
                                    @Model.facebookUser.first_name @Model.facebookUser.last_name
                                </div>
                                <input type="button" class="blue-action-button" value="Disconnect" />
                            </li>   
                        }
                        
                        @if (Model.twitterUser == null)
                        {
                            <li>
                                <div class="serviceThumb">
                                    <img src="/Public/images/icons/twitterThumb.png" alt="Twitter" />
                                </div>
                            
                                <input type="button" class="blue-action-button" value="Connect Twitter" />
                                <div class="connectDescription">
                                    Tweet and retweet<br />
                                    Favorite items        
                                </div>  

                            </li>
                        }
                        else
                        {
                            <li>
                                Connected
                            </li>   
                        }

                    </ul>
                    
                    

                    
                    
                    
                    
                    

                    <div id="connectTwitter">
                        
                    </div>
                </div>
                
                
                
                

                <div class="spacer"></div>
                <div class="seperator"></div>
                <div class="spacer"></div>

                <div class="acceptText">
                    <input type="button" onclick="submitForm();" class="blue-action-button createAccountSubmit submitForm" value="Update Account" />
                    <div id="createAccountWait">
                        <img src="/Public/images/icons/ajaxWaiting.gif" alt="" />
                    </div>
                </div>
               
            
            </div>
            


        </div>
        
        
        
        <br /><br />
<br /><br />        
<br /><br />        
<br />        
        
        
        
        
        
        <div class="profilePictureSection">
            
            <div class="center" style="padding-top:5px;"></div>
            @*<a href="" id="uploadavator">upload an avatar</a>*@
        </div>
        
        @*<div class="createFormFields">
            <fieldset class="">
                <div class="createFormField">
                    @Html.TextBoxFor(model => model.EmailAddress, new { @class = "blur", title = "Email Address" }) 
                    @Html.ValidationMessageFor(model => model.EmailAddress)
                    <div id="emailCheck"></div>
                </div>
                <div class="createFormField">
                    <input type="text" class="" id="txtPlainPassword" title="Password" value="Password" style="color: #ccc !important;"/>
                    @Html.PasswordFor(model => model.Password, new { @class = "", title = "Password", id = "Password" })
                </div>
                
                
                
                <div class="createFormField">
                    <div class="createFormLeft">
                        @Html.TextBoxFor(model => model.FirstName, new { @class = "blur", title = "First Name" }) 
                        @Html.ValidationMessageFor(model => model.FirstName)
                    </div>    
                    
                    <div class="createFormRight">
                        @Html.TextBoxFor(model => model.LastName, new { @class = "blur", title = "Last Name" }) 
                        @Html.ValidationMessageFor(model => model.LastName)
                    </div>

                </div>

                <div class="createFormField">
                    <h4>Birth Day</h4>
                    @Html.DropDownList("m_DOB", Enumerable.Range(1, 12).Select(i => new SelectListItem { Value = i.ToString(), Text = System.Globalization.CultureInfo.InvariantCulture.DateTimeFormat.GetMonthName(i) }), "Month")
                    @Html.DropDownList("d_DOB", Enumerable.Range(1, 31).Select(i => new SelectListItem { Value = i.ToString(), Text = i.ToString() }), "Day")
                    @Html.DropDownList("y_DOB", Enumerable.Range(1920, (DateTime.UtcNow.Year - 1920)).Reverse().Select(i => new SelectListItem { Value = i.ToString(), Text = i.ToString() }), "Year")
                    <span class="birthdayText">Epilogger uses your birthday to determine which type of events you are allowed to see. <strong>Your birth day will not be shared with anyone.</strong></span>
                </div>

            </fieldset>
            
            @Html.ValidationSummary()

            <div class="acceptText">
                By creating an account you agree to the Epilogger<br/> <a href="/home/Terms" target="_blank">Terms of Use</a> and <a href="/home/Privacy" target="_blank">Privacy Policy</a>
                <div class="spacer"></div>
                <input type="button" onclick="submitForm();" class="disabled blue-action-button createAccountSubmit submitForm" value="Create Account" />
                <div id="createAccountWait">
                    <img src="/Public/images/icons/ajaxWaiting.gif" alt="" />
                </div>
            </div>
               
            
        </div>*@
        
        
        @Html.HiddenFor(model => model.FirstName)
        @Html.HiddenFor(model => model.LastName)
        @*@Html.HiddenFor(model => model.ProfileImage)
        @Html.HiddenFor(model => model.DisplayProfileImage)
        @Html.HiddenFor(model => model.ServiceUserName)*@
        @Html.HiddenFor(model => model.DateOfBirth)  
        
        @*@Html.HiddenFor(model => model.AuthToken)
        @Html.HiddenFor(model => model.AuthTokenSecret)
        @Html.HiddenFor(model => model.AuthScreenname)
        
        @Html.HiddenFor(model => model.AuthService)*@
    }

</div>

<script type="text/javascript">

    function submitForm() {
        $(".submitForm").addClass("disabled");
        $(".submitForm").attr('disabled', 'disabled');
        $("#createAccountWait").show();
        $("form").submit();
    }


    $("#txtPlainPassword").show();
    $("#Password").hide();

    $("#txtPlainPassword").focus(function () {
        $(this).hide();
        $("#Password").show();
        $("#Password").focus();
    });

    $("#Password").blur(function () {
        if ($(this).val().length == 0) {
            $(this).hide();
            $("#txtPlainPassword").show();
        }
    });

    head.ready(function () {

        var dob = '@Model.DateOfBirth';
        var substrings = dob.split('/');

        var month = substrings[0];
        var day = substrings[1];
        var year = substrings[2].split(" ")[0];

        $("#d_DOB").val(day);
        $("#m_DOB").val(month);
        $("#y_DOB").val(year);

    });

</script>