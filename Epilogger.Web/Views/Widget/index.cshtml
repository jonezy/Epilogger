@using System.Globalization
@using Combres.Mvc
@using Epilogger.Web.Models
@model Epilogger.Web.Models.WidgetViewModel
@{
    Layout = "_EmbedLayout.cshtml";
    ViewBag.Title = "";

    var tweetHeightOffset    = 0;
    if (Model.Width < 300)
    {
        tweetHeightOffset = 224;
    }
    else
    {
        tweetHeightOffset = 241;
    }
    
    if (Model.Width < 250)
    {
        tweetHeightOffset = 206;
    }
    
    if (Model.Height < Model.Width)
    {
        //Offsets for Landscape layout
        tweetHeightOffset = 125;
    }
    
    
}

@if (Model.Width==100 && Model.Height==100)
{
    @: <div style="@string.Format("height:100%; width: 100%;") overflow-x: hidden; overflow-y: auto;" class="bbackground" id="wrapper">
} 
else 
{
    @: <div style="@string.Format("height: {0}px; width: {1}px;", Model.Height, Model.Width) overflow: hidden;" class="bbackground" id="wrapper">
}


    <div class="container">
        
        @Html.Partial("_header", new WidgetHeaderViewModel() { Name = Model.Name, EventSlug = Model.EventSlug, CustomSettings = Model.CustomSettings, Width = Model.Width, Height = Model.Height } )

        @if (Model.Width >= 500 && Model.Height >= 300)
        {
                /* Landscape */
	            <section id="feed-photos" class="horizontal btext blink">
		            <p class="section-title"><strong>Recent Photos</strong> <span>(<a href="" onclick="location.href='@Url.Action("Photos", new { id = Model.EventSlug, width = Model.Width, height = Model.Height })'; return false;">all photos</a>)</span></p>
		
                    <div class="feed-photos-container horizontal" style="height: @Html.Raw((Model.Height - tweetHeightOffset).ToString(CultureInfo.InvariantCulture))px; overflow:hidden">
		                @foreach (var theImage in Model.Images)
                        {
                            <a href="" onclick="@string.Format("location.href='photoDetails/{0}/{1}?width={2}&height={3}&returnto=1", Model.EventSlug, theImage.ID, Model.Width, Model.Width)'; return false;"><img src="@theImage.Fullsize" width="200" alt="" /></a>
                        }
                    </div>
	            </section>
	
	            <section id="feed-tweets" class="horizontal btext blink" style="height: @Html.Raw((Model.Height - tweetHeightOffset).ToString(CultureInfo.InvariantCulture))px">
		            <p class="section-title"><strong>Latest Tweets</strong> <span>(<a href="#">all tweets</a>)</span></p>
        
                    @foreach (var theTweet in Model.Tweets)
                    {
                        <article class="tweet">                
                            <img src="@theTweet.ProfileImageURL" class="twit-avatar" alt="" />

                            <div>
                                <p>
                                    <a class="twitterName" href="http://www.twitter.com/@theTweet.FromUserScreenName"><strong>@theTweet.FromUserScreenName:</strong></a>                        
                                    @Html.Raw(theTweet.TextAsHTML)
                                </p>
				
				                <ul class="tweet-nav">
					                <li> <a href="#">reply</a> &bullet;</li>
					                <li> <a href="#">retweet</a> &bullet;</li>
					                <li> @Html.DisplayFor(thing => theTweet.CreatedDate) &bullet;</li>
				                </ul>
                            </div>
                        </article>
                    }
	            </section>
        }
        else
        {
            /* Portrait */
            <section id="feed-photos" class="btext blink">
		        <p class="section-title"><strong>Recent Photos</strong> <span>(<a href="" onclick="location.href='@Url.Action("Photos", new { id = Model.EventSlug, width = Model.Width, height = Model.Height })'; return false;">all photos</a>)</span></p>
		
                <div style="overflow:hidden" class="feed-photos-container">
		        @foreach (var theImage in Model.Images)
                {
                    <a href="" onclick="location.href='photoDetails/@Model.EventSlug/@theImage.ID?width=@Model.Width&height=@Model.Height&returnto=1'; return false;"><img src="@theImage.Fullsize" width="200" alt="" /></a>
                }
                </div>
	        </section>
	
	        <section id="feed-tweets" class="btext blink" style="height: @Html.Raw((Model.Height - tweetHeightOffset).ToString(CultureInfo.InvariantCulture))px">
		        <p class="section-title"><strong>Latest Tweets</strong> <span>(<a href="#">all tweets</a>)</span></p>
        
                @foreach (var theTweet in Model.Tweets)
                {
                    <article class="tweet">                
                        <img src="@theTweet.ProfileImageURL" height="48" width="48" class="twit-avatar" />

                        <div>
                            <p>
                                <a class="twitterName" href="http://www.twitter.com/@theTweet.FromUserScreenName"><strong>@theTweet.FromUserScreenName:</strong></a>                        
                                @Html.Raw(theTweet.TextAsHTML)
                            </p>
				
				            <ul class="tweet-nav">
					            <li> 9 hours ago &bullet;</li>
					            <li> <a href="#">reply</a> &bullet;</li>
					            <li> <a href="#">retweet</a></li>
				            </ul>
                        </div>
                    </article>
                }
	        </section>
        }
	
	    <footer>
		    <a href="http://epilogger.com" target="_blank"><img src="/Public/images/widget/epilogger.png" alt="Epilogger logo"/></a>
		
            @Html.Partial("_EpiloggerCounts", @Model.EpiloggerCounts)
	    </footer>
        
        @Html.HiddenFor(e => e.CustomSettings.SpriteColor)

    </div>


<script language="javascript" type="text/javascript">
    var camera = document.getElementById("camera");
    var bird = document.getElementById("bird");
    var canvas = document.createElement("canvas");
    var camera = document.getElementById("camera");
    var bird = document.getElementById("bird");
    var canvas = document.createElement("canvas");
    var ctx = canvas.getContext("2d");
    var originalPixels = null;
    var currentPixels = null;

    function getPixels(img) {
        canvas.width = img.width;
        canvas.height = img.height;

        ctx.drawImage(img, 0, 0, img.naturalWidth, img.naturalHeight, 0, 0, img.width, img.height);
        originalPixels = ctx.getImageData(0, 0, img.width, img.height);
        currentPixels = ctx.getImageData(0, 0, img.width, img.height);

        img.onload = null;
    }

    function HexToRGB(Hex) {
        var Long = parseInt(Hex.replace(/^#/, ""), 16);
        return {
            R: (Long >>> 16) & 0xff,
            G: (Long >>> 8) & 0xff,
            B: Long & 0xff
        };
    }

    function changeColor() {
        if (!originalPixels) return; // Check if image has loaded
        var newColor = HexToRGB(document.getElementById("CustomSettings_SpriteColor").value);

        for (var I = 0, L = originalPixels.data.length; I < L; I += 4) {
            if (currentPixels.data[I + 3] > 0) // If it's not a transparent pixel
            {
                currentPixels.data[I] = originalPixels.data[I] / 255 * newColor.R;
                currentPixels.data[I + 1] = originalPixels.data[I + 1] / 255 * newColor.G;
                currentPixels.data[I + 2] = originalPixels.data[I + 2] / 255 * newColor.B;
            }
        }

        ctx.putImageData(currentPixels, 0, 0);
        bird.src = canvas.toDataURL("image/png");
        camera.src = canvas.toDataURL("img/png");
    }
</script>








