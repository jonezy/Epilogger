@using Epilogger.Web;
@using Epilogger.Web.Models;

@model Epilogger.Web.Models.SearchInEventViewModel
@{
    Layout = "~/Views/Shared/_InteriorLayout.cshtml";
    ViewBag.Title = "Epilogger - " + Model.Name + "- Search";
}

@*New event menu*@
@Html.Partial("Menu", Model.ToolbarViewModel)
<div class="spacer"></div>

<div id="events-nav">
    <h1>SEARCH EVENT</h1>
    @if (@Model.SearchResults != null && @Model.SearchResults.Count() > 0)
    {<h2>@Model.SearchTerm - @Model.SearchResults.Count() results</h2>}
    <br style="clear:both;" />
    @using (Html.BeginForm("Search", "events", FormMethod.Post, null))
    {
        @Html.TextBoxFor(t => t.SearchTerm)
        @Html.HiddenFor(model => model.Eventslug)
        <input type="submit" class="blue-action-button remove-bottom" value="Search" />
    }
</div>
<div id="events-content">

@if (Model.SearchResults != null) {
    foreach (SearchInEventModel item in Model.SearchResults) {
        <div class="alltweets-entry clearfix">
            <img src="@item.Tweet.ProfileImageURL" class="fleft" height="48" width="48" alt="" />
            <div class="tweet-content">
                <strong><a href="http://www.twitter.com/@item.Tweet.FromUserScreenName" class="tweet-content-username" target="_blank">@item.Tweet.FromUserScreenName</a></strong>
                <p>@Html.Raw(item.Tweet.TextAsHTML)</p>
                @if (@item.Image != null) {
                    var itvm = new Epilogger.Web.Models.ImageTemplateViewModel { Image = item.Image, CanDelete = false };
                    @Html.Partial("_ImageTemplate", itvm)
                }
                <span class="tweet-date">(@Html.DisplayFor(thing => item.Tweet.CreatedDate))</span>
            </div>
        </div>
    }
}

    @*@MvcHtmlString.Create(Html.Pager(100, Model.CurrentPageIndex, Model.SearchResults.Count(), new { controller = "Events", action = "Search", id = Model.ID, f = Request.QueryString["f"], t = Request.QueryString["t"] }))*@
</div>

<script type="text/javascript" charset="utf-8">
    head.ready(function () {
        $("a[rel^='prettyPhoto']").prettyPhoto({
            theme: 'light_square',
            animation_speed: 'fast',
            overlay_gallery: false,
            changepicturecallback: function () { changeDescription(); }
        });
    });
</script>