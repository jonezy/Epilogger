@using Epilogger.Web;

@model Epilogger.Web.Models.EventDisplayViewModel


@{
    ViewBag.Title = "Epilogger - " + Model.Name;
    
}

<div class="grid_8">
	<h1>@Model.Name</h1>
	<h2>@Model.SubTitle</h2>
			
	<p>@Html.Raw(Model.Description.Replace("\r", "<br />"))
        @if (Model.Description.Length > 266)
        { 
            @: ... (<a href="#">read more</a>)
        } </p>
</div>
	
<div class="grid_4">
    @*TODO Write this funcitonality into the application*@
	<small class="tinylabel">Sponsors & Supporters</small>
	<img src="@Url.Content("~/Public/images/samples/ad.png")" alt="" />
	<img src="@Url.Content("~/Public/images/samples/ad.png")" alt="" />
</div>
		
<div class="clear"></div>		
<span class="spacer"></span>
		
<div id="event-details">
	<span class="event-details-label">When:</span>
	<span class="event-details-detail">
		
        @if (Model.StartDateTime.Subtract(Model.EndDateTime).Days == 0)
        {
            @String.Format("{0:MMMM dd, yyyy}", Model.StartDateTime.ToUserTimeZone())
            @: <br />
            @String.Format("{0:h:mm tt}", Model.StartDateTime.ToUserTimeZone())
            @: to
            @String.Format("{0:h:mm tt}", Model.EndDateTime.ToUserTimeZone())
        }
        else
        {
            @String.Format("{0:MMMM dd, yyyy h:mm tt}", Model.StartDateTime.ToUserTimeZone())
            @: to 
            @String.Format("{0:MMMM dd, yyyy h:mm tt}", Model.EndDateTime.ToUserTimeZone())
        }

	</span>
			
	<span class="event-details-label">Where:</span>
	<span class="event-details-detail">
		@*Tattoo Rock Parlour<br/>
		567 Queen Street West<br/>
		Toronto (<a href="#">map</a>)*@
	</span>			
			
	<span class="event-details-label">
		URL:<br/>
		<span style="position:relative; top:5px">Hashtag:</span>
	</span>
	<span class="event-details-detail">
        @Model.WebsiteURL<br />
		@{
            try {
                string[] SearchT = Model.SearchTerms.Split(new string[] {" OR "}, StringSplitOptions.None);
                string SearchTerms = "";
                foreach (string s in SearchT) {
                    SearchTerms += s + ", ";
                }
                @Html.Raw("<strong>" + SearchTerms.Substring(0, (SearchTerms.Length - 2)) + "</strong>")
            }
            catch
            {
                <strong>@Model.SearchTerms</strong>
            }
        }
	</span>
			
	<span class="event-details-label">
		Cost: <br />        
		<span style="position:relative; top:5px">tw:</span><br/>
		<span style="position:relative; top:10px">fb:</span>
	</span>
	<span class="event-details-detail">
		@if (Model.Cost != null) {
            @Model.Cost
        }<br/>
        
        @if (Model.TwitterAccount != null)
        {
            <a href="http://www.twitter.com/@Model.TwitterAccount">@Model.TwitterAccount</a>
        }
        @if (Model.FacebookPageURL != null) 
        {
            <a href="@Model.FacebookPageURL" target="_blank">@Model.FacebookPageURL</a><br/>
        }
        
	</span>
</div>
		
<div class="clear"></div>
<div class="spacer"></div>
		
		
<!-- PHOTOS & VIDEOS -->
<div class="grid_8">
	<h2><span class="number">@Model.Images.Count()</span> Photos & Videos</h2>
	<h4>filter:</h4>

	<span class="sm-spacer"></span>

	<div class="image-grid" id="photosvideos">
        @foreach (Epilogger.Data.Image EPLImage in Model.Images.OrderByDescending(i => i.DateTime).Take(9))
        {
            <div class="withcomment">
			    <img alt="" height="154" width="180" src="@EPLImage.Thumb"/>
			    <a href="#" class="commentbubble">
                    @*Number of Comments*@
                    @EPLImage.ImageMetaData.Count()
                </a>
		    </div>
        }
	</div>
			
	<div class="clear"></div>
	<div class="spacer"></div>
			
	<p>(<a href="#">See all photos and videos</a>)</p>
</div>
		
		
<!-- TWEETS -->
<div class="grid_4">
	<h2><span class="number">@Model.Tweets.Count()</span> Tweets & Shoutouts</h2>
	<h4>filter:</h4>
			
	<span class="sm-spacer"></span>
			
	<ul class="plain-list">
        @foreach (Epilogger.Data.Tweet EPLTweet in Model.Tweets.OrderByDescending(t => t.CreatedDate).Take(4))
        {
            <li>
			    <img src="@EPLTweet.ProfileImageURL" class="fleft" alt="" />
			    <small><a href="http://www.twitter.com/@EPLTweet.FromUserScreenName">@EPLTweet.FromUserScreenName</a></small>
			    <p>@Html.Raw(EPLTweet.TextAsHTML)</p>
		    </li>
        }
	</ul>
			
	<span class="sm-spacer"></span>
			
</div>
		
<div class="clear"></div>
<div class="big-spacer"></div>
		
		
<!-- BLOG POSTINGS -->
<div class="grid_4">
	<h2>Blog postings</h2>
	<ul class="plain-list">
        @foreach (Epilogger.Data.BlogPost TheBlogPost in Model.BlogPosts.Take(3))
        {
		<li>
			<img src="@Url.Content("~/Public/images/samples/avatar.png")" class="fleft"/>
			<a href="@TheBlogPost.BlogURL">@TheBlogPost.Title</a><br/>
			<small><a href="#">BY MICHAEL NUS</a></small><br/>
			<p>After a very busy day of meetings and wheeling...</p>
            @*TODO - Add move fiels to the Blog table to store more Info!*@
		</li>
        }
	</ul>
			
	<div class="clear"></div>
	<p>(<a href="#">See all blog posts</a>)</p>
</div>
		
		
<!-- EXTERNAL LINKS -->
<div class="grid_4">
	<h2>External Links</h2>
	<ul class="plain-list">
		@foreach (Epilogger.Data.URL TheURL in Model.ExternalLinks.Take(3))
        {
            <li>
			    <a href="@TheURL.ShortURL">@TheURL.FullURL</a><br/>
			    <small><img src="@Url.Content("~/Public/images/icons/tweet-black.png")" class="valign" />VIA @TheURL.Tweets.Where(t => t.ID==TheURL.TweetID).FirstOrDefault().FromUserScreenName</small>
      	    </li>
        }
    </ul>
			
	<div class="clear"></div>
	<p>(<a href="#">See all links</a>)</p>
</div>
		
		
<!-- CHECKINS -->
<div class="grid_4">
	<h2><span class="number">@Model.CheckIns.Count()</span> Check-ins</h2>
	<p>All these lovely people attended Social Media Day Global at the Tattoo Rock Parlour!</p>
	
    
    <ul class="plain-list">
        @foreach (Epilogger.Data.CheckIn checkin in @Model.CheckIns.OrderByDescending(c => c.CheckInDateTime).Take(5))
        {
            <li>
                @{
                Epilogger.Data.Tweet ThisTweet = checkin.Tweets.Where(t => t.ID == checkin.TweetID).FirstOrDefault();
			    }

                <img src="@Url.Content(ThisTweet.ProfileImageURL)" class="fleft" alt="" />
			    <small><a href="http://www.twitter.com/@ThisTweet.FromUserScreenName">@ThisTweet.FromUserScreenName</a></small>
			    <p>@Html.Raw(ThisTweet.TextAsHTML)</p>
		    </li>
        }
	</ul>
    
    
    
    @*
    
    
    
    
    <span class="image-grid">
        @foreach (Epilogger.Data.CheckIn checkin in @Model.CheckIns.OrderByDescending(c => c.CheckInDateTime).Take(5))
        {
            <div>
                <a href="@checkin.FourSquareCheckInURL"><img src="@Url.Content(checkin.Tweets.Where(t => t.ID == checkin.TweetID).FirstOrDefault().ProfileImageURL)" alt="" /></a>
                <a href="@checkin.FourSquareCheckInURL">@Html.Raw(checkin.Tweets.Where(t => t.ID == checkin.TweetID).FirstOrDefault().TextAsHTML)</a>
            </div>
        }

	</span>*@
</div>




