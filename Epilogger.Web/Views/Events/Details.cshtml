@model Epilogger.Web.Models.EventDisplayViewModel
@{
    Layout = "~/Views/Shared/_InteriorLayout.cshtml";
    ViewBag.Title = "Epilogger - " + Model.Name;    
}

@{
    bool IncludeDateRange = false;
    int YesCount = 0;

    if (Request.QueryString["f"] != null)
    {
        YesCount++;
    }
    if (Request.QueryString["t"] != null)
    {
        YesCount++;
    }
    if (YesCount == 2)
    {
        IncludeDateRange = true;
    }
}

<script type="text/javascript" language="javascript">
    head.js('@Url.Content("~/Public/js/EventDetails.js")');
</script>

@if (Model.Tweets.FirstOrDefault() != null)
{
    <script language="javascript" type="text/javascript">
        var pageLoadTime = '@string.Format("{0:yyyy-MM-dd HH:mm:ss}", Model.Tweets.FirstOrDefault().CreatedDate)';
    </script>
}
else
{
    <script language="javascript" type="text/javascript">
        var pageLoadTime = '@string.Format("{0:yyyy-MM-dd HH:mm:ss}", DateTime.UtcNow)';
    </script>
}
<script language="javascript" type="text/javascript">
    var EventID = @Model.ID;

    var EventName = '@Model.Name';
    var EventSlug = '@Model.EventSlug';
    var EventURL = 'http://www.epilogger.com/Events/@Model.EventSlug/Details';
    var HasSubscribed = @Model.HasSubscribed.ToString().ToLower();
    
    var disableAutoupdate = false;

    //Parameters to control the Tweet list
    var updateTimeout = 5000;
    var updateRate = 10000;
    var prologuePostsUpdates = 1;
    var isFirstFrontPage = 1;   
    var postsOnPage = new Array;
    var postsOnPageQS = '';
    var maxItemsOnPage = 6;

    //Parameters to control the Image List
    var photoUpdateTimeout = 5000;
    var photoUpdateRate = 15000;
    var photoProloguePostsUpdates = 1;
    var photoIsFirstFrontPage = 1;
    var photoPageLoadTime = pageLoadTime;
    
    var photoPostsOnPage = new Array;
    var photoPostsOnPageQS = '';
    var photoMaxItemsOnPage = 9;
    
</script>
<style type="text/css">
    .tweet {
        display: block;
        clear: both;
        position: relative;
        z-index: 1000;
    }
    
    .newupdates {
        display: none;
        background: #eebad1;
    }
</style>



@*This is for the upload from Facebook*@
@*<link href="@Url.Content("~/Public/css/modal.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Public/js/FacebookPhotoPicker/dojoroot/dijit/themes/tundra/tundra.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Public/js/FacebookPhotoPicker/dojoroot/dojo/resources/dojo.css")" rel="stylesheet" type="text/css" />*@

<!-- Pickup the FB_API_KEY and PHOTO_PICKER_DEBUG configuration values -->
@*<script type="text/javascript" src="@Url.Content("~/Public/js/FacebookPhotoPicker/photoPickerConfig.js")"></script>*@

<!-- Initialise Dojo Javascript library -->
@*<script type="text/javascript">
    var djConfig = {
        parseOnLoad: true,
        isDebug: PHOTO_PICKER_DEBUG
    };
</script>
    
<script type="text/javascript" src="@Url.Content("~/Public/js/FacebookPhotoPicker/dojoroot/dojo/dojo.js")"></script>*@
@*Edn Script for upload from Facebook*@

<div class="grid_12 alpha">
    @if (Model.CurrentUserRole == UserRoleType.Administrator)
    {
        <div class="grid_12 alpha" style="background-color: palegoldenrod">
            <strong>Event was created by:</strong> @Model.TheUser.FirstName @Model.TheUser.LastName (@Model.TheUser.Username)
        </div>
        <span class="spacer"></span>
    }

    @if (Model.HasSubscribed)
    {
        <div class="subscribedIndicator">SUBSCRIBED</div>
    }
    
    <div class="grid_12 alpha">
        <h1>@Model.Name</h1>
        <h2 style="margin:0; padding:0">@Model.SubTitle</h2>

        @*Event Rating Section*@
        @if (!Model.HasUserRated)
        {
            <ul class="star-rating">
                @if (Model.EventRatings.Sum(i => i.UserRating) > 0)
                {
                    <li class="current-rating" style="width:@(((Convert.ToDecimal(Model.EventRatings.Sum(i => i.UserRating)) / Convert.ToDecimal(Model.EventRatings.Count())) / 5) * 100)%;" title="@((Model.EventRatings.Sum(i => i.UserRating) / Model.EventRatings.Count())) out of 5 stars - based on @Model.EventRatings.Count() ratings">
                        @((Model.EventRatings.Sum(i => i.UserRating) / Model.EventRatings.Count())) out of 5 stars
                    </li>
                }
                else
                {
                    <li class="current-rating noratings" style="width:0%;" title="No ratings">
                        No ratings
                    </li>
                }
            </ul>
            <a href="" class="smallRateLink">(Rate this event)</a>
                using (Html.BeginForm("StarRatings", "events", FormMethod.Post, new { @id = "ratingForm" }))
                {
                @Html.Partial("_StarRatingTemplate")
                @Html.HiddenFor(model => model.EventSlug)
                @Html.Hidden("UserRating")
                }
        }
        else
        {
            <ul class="star-rating">
                @if (Model.EventRatings.Sum(i => i.UserRating) > 0)
                {
                    <li class="current-rating" style="width:@(((Convert.ToDecimal(Model.EventRatings.Sum(i => i.UserRating)) / Convert.ToDecimal(Model.EventRatings.Count())) / 5) * 100)%;" title="@((Model.EventRatings.Sum(i => i.UserRating) / Model.EventRatings.Count())) out of 5 stars - based on @Model.EventRatings.Count() ratings">
                        @((Model.EventRatings.Sum(i => i.UserRating) / Model.EventRatings.Count())) out of 5 stars
                    </li>
                }
            </ul>
            <div class="starSmall">You rated @Model.EventRatings.Where(i => i.UserID == Model.CurrentUserID && i.EventID == Model.ID).FirstOrDefault().UserRating stars on <br /> @Html.DisplayFor(thing => Model.EventRatings.Where(i => i.UserID == Model.CurrentUserID).FirstOrDefault().RatingDateTime, "ShortDateTime")</div>
        }
        
        <div class="" style="height: 60px; width: 234px; float: right; top: 162px; position: absolute; right: 10px;">
            <script type="text/javascript"><!--
                google_ad_client = "ca-pub-9709690433051456";
                /* Event Page Header */
                google_ad_slot = "3239655459";
                google_ad_width = 234;
                google_ad_height = 60;
            //-->
            </script>
            <script type="text/javascript"
                    src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
            </script>
            
        </div>

        <span class="spacer"></span> 

        @*New event menu*@
        @Html.Partial("Menu", Model.ToolbarViewModel)

        <div id="SearchTimeFilter">
            @using (Html.BeginForm("Search", "events", FormMethod.Post, null))
            {
                @Html.TextBox("SearchTerm", null, new { @class = "remove-bottom blur", title = "Search within Event ..." }) @*<input type="submit" class="blue-action-button remove-bottom fleft" value="Search" />*@
                @Html.HiddenFor(model => model.EventSlug)
            }
        </div>

        

        @*<div id="SearchTimeFilter">
            <div class="filter-by-time">
                @using (Html.BeginForm("details", "events", new { id = Model.ID }, FormMethod.Post, null))
                {
                    @Html.Hidden("ResetDates")
                    <h4>Filter timespan:&nbsp; </h4>
                    <input type="text" class="picker-start-date" name="start_date" value="@Html.DisplayFor(e => e.FromDateTime, "ShortDate")" />
                    <input type="text" class="picker-start-time" name="start_time" value="@Html.DisplayFor(e => e.FromDateTime, "FullTime")" />
                    <div style="float: left;">&nbsp; to &nbsp;</div>
                    <input type="text" class="picker-end-time" name="end_time" value="@Html.DisplayFor(e => e.ToDateTime, "FullTime")" />
                    <input type="text" class="picker-end-date" name="end_date" value="@Html.DisplayFor(e => e.ToDateTime, "ShortDate")" />
                    <input type="submit" value="ok" class="blue-action-button" /> 
                    <input type="button" value="x" name="ClearDates" onclick="$('#ResetDates').val('1'); $(form).submit();" />
                }
            </div>
            
        </div>*@




        <div class="spacer"></div>
    </div>
</div>



    <div class="grid_5 alpha omega eventDescriptionSection">
        <div id="eventDescription">
            @Html.Raw(Model.Description.Replace("\r", "<br />"))
        </div>
        
        @*<span class="spacer"></span>*@
        <br />
        <strong>Official Website:</strong> <a href="@Model.WebsiteURL" target="_blanc">@Model.WebsiteURL</a>
        <br /><br />
        <table id="event-particulars">
        <tr>
            <td>
                @if (Model.Venue != null)
                {
                    <span class="img"><img src="@Url.Content("~/Public/images/icons/details-checkin.png")" /></span>
                    <span>@Model.Venue.Name,<br/> @Model.Venue.Address,<br /> @Model.Venue.City (<a href="http://maps.google.com/?q=@Model.Venue.Name @Model.Venue.Address @Model.Venue.City @Model.Venue.State @Model.Venue.Zip" target="_blank">map</a>)</span>
                }
           </td>
           <td>
                <span class="img"><img src="@Url.Content("~/Public/images/icons/details-time.png")" /></span>
                <span>
                @if (Model.StartDateTime.Subtract(Model.EndDateTime).Days == 0)
                {
                    @Html.DisplayFor(e => e.StartDateTime, "FullDate") <br />
                    @Html.DisplayFor(e => e.StartDateTime, "Time") @:to @Html.DisplayFor(e => e.EndDateTime, "Time")
                }
                else
                {
                    @Html.DisplayFor(e => e.StartDateTime) @:to @Html.DisplayFor(e => e.EndDateTime)
                }
                </span>
           </td>
        </tr>
        <tr>
            <td>
                <span class="img"><img src="@Url.Content("~/Public/images/icons/details-cost.png")" /></span>
                <span>
                @if (Model.Cost != null)
                {
                    @Model.Cost
                }
                else
                {
                    @:N/A
                }
                </span>
            </td>
            <td>
                <span class="img"><img src="@Url.Content("~/Public/images/icons/details-hashtag.png")" /></span>
                <span>
                @{
                    try
                    {
                        string[] SearchT = Model.SearchTerms.Split(new string[] { " OR " }, StringSplitOptions.None);
                        string SearchTerms = "";

                        foreach (string s in SearchT)
                        {
                            SearchTerms += s + ", ";
                        }
        
                        @Html.Raw(SearchTerms.Substring(0, (SearchTerms.Length - 2)))
                    }

                    catch
                    {
                        @Model.SearchTerms
                    }
                }
                </span> 
            </td>
        </tr>
        </table>
        
        
    </div>


    <div class="grid_7 alpha omega eventDescriptionSection">
    @if (Model.Venue != null)
    {
        <script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?sensor=true"></script>
        <script type="text/javascript">
            var shape = {
                coord: [16, 0, 17, 1, 18, 2, 19, 3, 20, 4, 21, 5, 21, 6, 22, 7, 22, 8, 22, 9, 22, 10, 22, 11, 22, 12, 22, 13, 22, 14, 22, 15, 21, 16, 21, 17, 20, 18, 19, 19, 18, 20, 17, 21, 15, 22, 13, 23, 13, 24, 13, 25, 13, 26, 13, 27, 13, 28, 13, 29, 13, 30, 13, 31, 13, 32, 13, 33, 13, 34, 13, 35, 13, 36, 13, 37, 13, 38, 13, 39, 13, 40, 13, 41, 13, 42, 13, 43, 13, 44, 13, 45, 13, 46, 13, 47, 13, 48, 13, 49, 13, 50, 13, 51, 13, 52, 13, 53, 13, 54, 14, 55, 15, 56, 17, 57, 17, 58, 18, 59, 19, 60, 19, 61, 19, 62, 19, 63, 19, 64, 18, 65, 18, 66, 17, 67, 16, 68, 15, 69, 14, 70, 13, 71, 13, 72, 13, 73, 12, 74, 12, 75, 12, 76, 11, 76, 11, 75, 11, 74, 11, 73, 10, 72, 10, 71, 9, 70, 9, 69, 8, 68, 7, 67, 6, 66, 6, 65, 5, 64, 5, 63, 5, 62, 5, 61, 5, 60, 6, 59, 6, 58, 7, 57, 8, 56, 10, 55, 11, 54, 11, 53, 11, 52, 11, 51, 11, 50, 11, 49, 11, 48, 11, 47, 11, 46, 11, 45, 11, 44, 11, 43, 11, 42, 11, 41, 11, 40, 11, 39, 11, 38, 11, 37, 11, 36, 11, 35, 11, 34, 11, 33, 11, 32, 11, 31, 11, 30, 11, 29, 11, 28, 11, 27, 11, 26, 11, 25, 11, 24, 11, 23, 8, 22, 5, 21, 4, 20, 3, 19, 2, 18, 1, 17, 1, 16, 0, 15, 0, 14, 0, 13, 0, 12, 0, 11, 0, 10, 0, 9, 0, 8, 0, 7, 1, 6, 1, 5, 2, 4, 3, 3, 4, 2, 5, 1, 7, 0, 16, 0],
                type: 'poly'
            };

            function initialize() {
                var geocoder = new google.maps.Geocoder({ region: 'CA' });
                var address = 
                geocoder.geocode({ 'address': '@Model.Venue.Address, @Model.Venue.City' }, function (results, status) {
                    if (status == google.maps.GeocoderStatus.OK) {
                        userLat = results[0].geometry.location.lat();
                        userLng = results[0].geometry.location.lng();
                        var latlng = new google.maps.LatLng(userLat, userLng);

                        var myOptions = {
                            zoom: 15,
                            center: latlng,
                            mapTypeId: google.maps.MapTypeId.ROADMAP
                        };


                        var map = new google.maps.Map(document.getElementById("map_canvas"), myOptions);

                        var marker = new google.maps.Marker({
                            draggable: false,
                            animation: google.maps.Animation.DROP,
                            bouncy: true,
                            position: latlng,
                            map: map
                        });
                    }
                });

        

            }

            function loadScripts() {
                var script = document.createElement('script');
                script.type = 'text/javascript';
                script.src = 'https://maps.googleapis.com/maps/api/js?sensor=false&callback=initialize';
                document.body.appendChild(script);
            }

            window.onload = loadScripts;


        </script>
        <div id="map_canvas" style="width:100%; height:200px"></div>

    }

    </div>
    <div class="clearfix"></div>
    
<a href="#" id="collapse"><span><img src="@Url.Content("~/Public/images/icons/less.png")" /> hide details</span></a>

@*

<div class="grid_12 alpha">
    @if (Model.HasSubscribed)
    {
        <div class="subscribedIndicator">
            SUBSCRIBED</div>
    }
    <div class="grid_10 alpha">
        <h1>@Model.Name</h1>
        <h2><span style="float:left">@Model.SubTitle</span></h2>
        <br class="clear" />

        
        

        <div id="event-intro">
            @Html.Raw(Model.Description.Replace("\r", "<br />"))
        </div>

        <div class="sm-spacer"></div>
    </div>
</div>

<div class="sm-spacer"></div>

    <!--
    <div class="inEventSearch fleft">
        @using (Html.BeginForm("Search", "events", FormMethod.Post, null))
        {
            @Html.TextBox("SearchTerm")
            <input type="submit" class="blue-action-button remove-bottom" value="Search" />
            @Html.HiddenFor(model => model.ID)
        }
    </div>
    -->
    @if (Model.HasSubscribed)
        {
            using (Html.BeginForm("unsubscribe", "events", FormMethod.Post, new { @class = "remove-bottom" }))
            {
            <input type="submit" value="Unsubscribe" name="SubscribeToEvent" class="fleft blue-action-button remove-bottom" id="" />
            @Html.HiddenFor(model => model.ID)
            }
        }
        else
        {
            using (Html.BeginForm("subscribe", "events", FormMethod.Post, new { @class = "remove-bottom" }))
            {
            <input type="submit" value="Subscribe" name="SubscribeToEvent" class="fleft blue-action-button remove-bottom" id="" />
            @Html.HiddenFor(model => model.ID)
            }
        }

    <div class="filter-by-time fright">
        @using (Html.BeginForm("details", "events", new { id = Model.ID }, FormMethod.Post, null))
        {
            @Html.Hidden("ResetDates")
            <h4>Filter timespan:&nbsp; </h4>
            @Html.EditorFor(m => m.FromDateTime)
            <label style="position:relative; left:-10px">to</label>
            @Html.EditorFor(m => m.ToDateTime)
            <input type="submit" value="ok" class="blue-action-button" /> 
            <input type="button" value="x" name="ClearDates" onclick="$('#ResetDates').val('1'); $(form).submit();" />
        }
    </div>

<br class="clear" />
<div class="sm-spacer"></div>*@

@*
<div id="event-details" class="clearfix">
    <ul>
        <li>
            <label>When:</label><div class="value">
            <div class="value">
                    @if (Model.StartDateTime.Subtract(Model.EndDateTime).Days == 0)
                    {
                        @Html.DisplayFor(e => e.StartDateTime, "FullDate") <br />
                        @Html.DisplayFor(e => e.StartDateTime, "Time") @:to @Html.DisplayFor(e => e.EndDateTime, "Time")
                    }
                    else
                    {
                        @Html.DisplayFor(e => e.StartDateTime) @: to <br />
                        @Html.DisplayFor(e => e.EndDateTime)
                    }
                </div>
        </li>
    </ul>

    <ul>
        <li>
            <label>Where:</label>
            <div class="value">
                @if (Model.Venue != null)
                {
                    <dd>@Model.Venue.Name<br/> @Model.Venue.Address, @Model.Venue.City<br/> (<a href="http://maps.google.com/?q=@Model.Venue.Name @Model.Venue.Address @Model.Venue.City @Model.Venue.State @Model.Venue.Zip" target="_blank">see map</a>)</dd>
                }
            </div>
        </li>
    </ul>

    <ul class="hashtags">
        <li>
            <label> Hashtag(s):</label>
            <div class="value">
                    @{
                        try
                        {
                            string[] SearchT = Model.SearchTerms.Split(new string[] { " OR " }, StringSplitOptions.None);
                            string SearchTerms = "";

                            foreach (string s in SearchT)
                            {
                                SearchTerms += s + ", ";
                            }
        
                        @Html.Raw("<strong>" + SearchTerms.Substring(0, (SearchTerms.Length - 2)) + "</strong>")
                        }
                        catch
                        {
                        <strong>@Model.SearchTerms</strong>
                        }
                    }
            </div>
        </li>
    </ul>

    <ul>
        <li>
            <label>Cost:</label>
            <div class="value">
                    @if (Model.Cost != null)
                    {
                        @Model.Cost
                    }
                    else
                    {
                        @:N/A
                    }
            </div>
        </li>
        <li>
            <label>Url:</label>
            <div class="value"><a href="@Model.WebsiteURL" target="_blank">@Model.WebsiteURL</a></div>
        </li>
        <li>
            <label></label>
            <div class="value">
                @if (Model.TwitterAccount != null)
                {
                    @:<span class="label">tw:</span> <a href="http://www.twitter.com/@Model.TwitterAccount">@Model.TwitterAccount</a>
                            }
                @if (Model.FacebookPageURL != null)
                {
                    @:<br/><span class="label">fb:</span> <a href="@Model.FacebookPageURL" target="_blank">visit page</a><br/>
                            }
            </div>
        </li>
    </ul>
</div>*@

<div class="spacer clear"></div>


<!-- TWEETS -->
<div class="grid_5 alpha omega">
    <h2>
        <span class="number" id="tweetCount">@string.Format("{0:#,###}", Model.TweetCount)</span>Tweets
        & Shoutouts</h2>
    <span class="sm-spacer"></span>
    <ul class="plain-list" id="tweetlist">
        @foreach (Epilogger.Data.Tweet EPLTweet in Model.Tweets)
        {
            var ttvm = new Epilogger.Web.Models.TweetTemplateViewModel { Tweet = EPLTweet, CanDelete = Model.CanDelete };
            @Html.Partial("_TweetTemplate", ttvm);
        }
    </ul>

    
     <p>(@Html.ActionLink("See all tweets", "allTweets", "events", new { id = Model.EventSlug, f = Request.QueryString["f"], t = Request.QueryString["t"] }, new { }))</p>
                   
    <span class="sm-spacer"></span>
</div>


<!-- PHOTOS & VIDEOS -->

@Html.Action(MVC.Image.Upload())

<div class="grid_7 omega">
    <h2>
        <span class="number" id="photoCount">@string.Format("{0:#,###}", Model.ImageCount)</span>Photos
        & Videos
    </h2>
    <div class="image-grid" id="photosvideos">
        @foreach (Epilogger.Data.Image EPLImage in Model.Images)
        {
            var itvm = new Epilogger.Web.Models.ImageTemplateViewModel { Image = EPLImage, CanDelete = Model.CanDelete};
            @Html.Partial("_ImageTemplate", itvm)
        }
    </div>

    <span class="clear sm-spacer"></span>

    <p>
        @if (!IncludeDateRange)
        { 
            @: (@Html.ActionLink("See all photos and videos", "AllPhotos", "events", new { id = Model.ID }))
           }
        else
        { 
            @: (@Html.ActionLink("See all photos and videos", "AllPhotos", "events", new { id = Model.ID, f = Request.QueryString["f"], t = Request.QueryString["t"] }, new { }))
        }
        @*(<a href="" class="uploadPhotos" alt="">Have something to contribute? Upload your photos</a>)*@
    </p>
</div>

<div class="clear spacer"></div>

<div class="event-bottom">
    <!-- BLOG POSTINGS -->
    <div class="grid_4 alpha">
        <h2>
            Blog postings</h2>
        <ul class="plain-list">
            @foreach (Epilogger.Data.BlogPost TheBlogPost in Model.BlogPosts.Take(3))
            {
                <li class="blogpost">
                    
                    <a href="@TheBlogPost.BlogURL">@TheBlogPost.Title</a><br />
                    <p class="blogDescription">
                        @TheBlogPost.Description<br />
                        <span class="blogPostDate">@Html.DisplayFor(e => TheBlogPost.DateTime)</span>
                    </p>
                </li>
                    @*<img src="@Url.Content("~/Public/images/samples/avatar.png")" class="fleft"/>*@
                    @*<small><a href="#">BY MICHAEL NUS</a></small><br />*@
                    @*<p>After a very busy day of meetings and wheeling...</p>*@
                    @*TODO - Add move fiels to the Blog table to store more Info!*@ 
            }
        </ul>
        <div class="clear">
        </div>
        <p>
             (@Html.ActionLink("See all blog posts", "allblogposts", "events", new { id = Model.EventSlug, f = Request.QueryString["f"], t = Request.QueryString["t"] }, new { })) (<a href="#" class="blogposts-modal">Submit blog post</a>)</p>
    </div>
    <!-- EXTERNAL LINKS -->
    <div class="grid_4 overflowhide">
        <h2>External Links</h2>
        <ul class="plain-list">
            @foreach (Epilogger.Data.URL TheURL in Model.ExternalLinks)
            {
                <li><a href="@TheURL.ShortURL" title="@TheURL.Tweets.Where(t => t.ID == TheURL.TweetID).FirstOrDefault().Text">@TheURL.FullURL</a><br />
                    <small>
                        <img src="@Url.Content("~/Public/images/icons/tweet-black.png")" class="valign" />VIA
                        @TheURL.Tweets.Where(t => t.ID == TheURL.TweetID).FirstOrDefault().FromUserScreenName</small>
                </li>
            }
        </ul>
        <div class="clear">
        </div>
        <p>
            @if (!IncludeDateRange)
            { 
                @: (@Html.ActionLink("See all links", "alllinks", "events", new { id = Model.ID }))
           }
            else
            { 
                @: (@Html.ActionLink("See all links", "alllinks", "events", new { id = Model.ID, f = Request.QueryString["f"], t = Request.QueryString["t"] }, new { }))
            }

                       @*(<a href="#" class="links-modal">Submit a link</a>)*@
        </p>
    </div>
    <!-- CHECKINS -->
    <div class="grid_3 omega" style="margin-top: -20px;">
        <h2>
            <span class="number">@Model.CheckInCount</span> Check-ins</h2>
        <p>
            All these lovely people attended @Model.Name!</p>
        <div class="event-checkins clearfix">
            @foreach (Epilogger.Data.CheckIn checkin in @Model.CheckIns)
            {
                Epilogger.Data.Tweet ThisTweet = checkin.Tweets.Where(t => t.ID == checkin.TweetID).FirstOrDefault();
                <a href="@checkin.FourSquareCheckInURL" target="_blank">
                    <img src="@Url.Content(ThisTweet.ProfileImageURL)" class="fleft" height="48" width="48" alt="" /></a>
            }
            @if (!IncludeDateRange)
            { 
                @: (@Html.ActionLink("See all checkins", "allcheckins", "events", new { id = Model.ID }))
            }
            else
            { 
                @: (@Html.ActionLink("See all checkins", "allcheckins", "events", new { id = Model.ID, f = Request.QueryString["f"], t = Request.QueryString["t"] }, new { }))
            }
        </div>
        
        
        
    </div>
</div>
<br style="clear: both;" />
@*<div class="grid_4 omega">
    <small class="tinylabel">Sponsors
        & Supporters</small>
    <img src="@Url.Content("~/Public/images/samples/ad.png")" alt="" />
    <img src="@Url.Content("~/Public/images/samples/ad.png")" alt="" />
</div>*@
<script>
    head.ready(function () {
        $("a[rel^='prettyPhoto']").prettyPhoto({
            theme: 'light_square',
            animation_speed: 'fast',
            overlay_gallery: false,
            changepicturecallback: function () { changeDescription(); }
        });

        $(".blogposts-modal").colorbox({
            width: "60%", height: "370px",
            href: '@Url.Action("AddBlogPost", "Events", new { id = Model.ID })',
            onComplete: function () { $("#BlogURL").focus(); }
        });


        $(".links-modal").colorbox({
            width: "60%", height: "60%",
            href: '@Url.Action("AddLink", "Events")'
        });


//        $(".uploadPhotos").colorbox({
//            width: "60%", height: "60%",
//            href: '@Url.Action("UploadPhotos", "Events", new { id = Model.ID })'
//        });

    });

</script>


