@using Epilogger.Web;
@model Epilogger.Web.Models.EventDisplayViewModel
@{
    Layout = "~/Views/Shared/_InteriorLayout.cshtml";
    ViewBag.Title = "Epilogger - " + Model.Name;
    
}
@{
    bool IncludeDateRange = false;
    int YesCount = 0;

    if (Request.QueryString["f"] != null)
    {
        YesCount++;
    }
    if (Request.QueryString["t"] != null)
    {
        YesCount++;
    }
    if (YesCount == 2)
    {
        IncludeDateRange = true;
    }
}
<script type="text/javascript" language="javascript">
    head.js('@Url.Content("~/Public/js/EventDetails.js")');
</script>
@if (Model.Tweets.FirstOrDefault() != null)
{
    <script language="javascript" type="text/javascript">
        var pageLoadTime = '@string.Format("{0:yyyy-MM-dd HH:mm:ss}", Model.Tweets.FirstOrDefault().CreatedDate)';
    </script>
}
else
{
    <script language="javascript" type="text/javascript">
        var pageLoadTime = '@string.Format("{0:yyyy-MM-dd HH:mm:ss}", DateTime.UtcNow)';
    </script>
}
<script language="javascript" type="text/javascript">
    var EventID = @Model.ID;

    var EventName = '@Model.Name';
    var EventURL = 'http://www.epilogger.com/Events/Details/@Model.ID';
    var HasSubscribed = @Model.HasSubscribed.ToString().ToLower();
    
    var disableAutoupdate = false;

    //Parameters to control the Tweet list
    var updateTimeout = 5000;
    var updateRate = 10000;
    var prologuePostsUpdates = 1;
    var isFirstFrontPage = 1;   
    var postsOnPage = new Array;
    var postsOnPageQS = '';
    var maxItemsOnPage = 6;

    //Parameters to control the Image List
    var photoUpdateTimeout = 5000;
    var photoUpdateRate = 15000;
    var photoProloguePostsUpdates = 1;
    var photoIsFirstFrontPage = 1;
    var photoPageLoadTime = pageLoadTime;
    
    var photoPostsOnPage = new Array;
    var photoPostsOnPageQS = '';
    var photoMaxItemsOnPage = 9;
    
</script>
<style type="text/css">
    .tweet {
        display: block;
        clear: both;
        position: relative;
        z-index: 1000;
    }
    
    .newupdates {
        display: none;
        background: #eebad1;
    }
</style>
@Html.Partial("EventToolbar")
<div class="grid_12 alpha">
    @if (Model.HasSubscribed)
    {
        <div class="subscribedIndicator">
            SUBSCRIBED</div>
    }
    <div class="grid_10 alpha">
        <h1>@Model.Name</h1>
        <h2>@Model.SubTitle</h2>
        <div id="event-intro">
            @Html.Raw(Model.Description.Replace("\r", "<br />"))
        </div>
        <div class="sm-spacer"></div>
        @if (Model.HasSubscribed)
        {
            using (Html.BeginForm("unsubscribe", "events", FormMethod.Post, new { @class = "remove-bottom" }))
            {
            <input type="submit" value="Unsubscribe" name="SubscribeToEvent" class="blue-action-button remove-bottom"
                id="" />
            @Html.HiddenFor(model => model.ID)
            }
        }
        else
        {
            using (Html.BeginForm("subscribe", "events", FormMethod.Post, new { @class = "remove-bottom" }))
            {
            <input type="submit" value="Subscribe" name="SubscribeToEvent" class="blue-action-button remove-bottom"
                id="" />
            @Html.HiddenFor(model => model.ID)
            }
        }
    </div>

    @*Event Rating Section*@
    <div class="grid_2 omega">
        @*OLD SYSTEM*@
        @*@if (!Model.HasUserRated)
        {
            using (Html.BeginForm("eventRating", "events", FormMethod.Post, new { @class = "remove-bottom" }))
            {   
            <input class="blue-action-button remove-bottom" type="button" value="+" name="ThumbsUpButton"
                id="" onclick="$('#ThumbsUp').val('1'); $(form).submit();" /> @:&nbsp;/&nbsp;
                <input class="blue-action-button remove-bottom" type="button" value="-" name="ThumbsDownButton"
                    id="" onclick="$('#ThumbsUp').val('0'); $(form).submit();" />
            @Html.HiddenFor(model => model.ID)
            @Html.Hidden("ThumbsUp")
            }
        }
        else
        {
            @Model.EventRatings.Where(i => i.UserRating == "+").Count().ToString() @: ThumbsUp<br/>
            @Model.EventRatings.Where(i => i.UserRating == "-").Count().ToString() @: ThumbsDown<br/>
            @: You voted on:
            @Html.DisplayFor(thing => Model.EventRatings.Where(i => i.UserID == Model.CurrentUserID).FirstOrDefault().RatingDateTime)
        }*@


        @if (!Model.HasUserRated)
        {
            <ul class="star-rating">
                @if (Model.EventRatings.Sum(i => i.UserRating) > 0)
                {
                    <li class="current-rating" style="width:@(((Model.EventRatings.Sum(i => i.UserRating) / Model.EventRatings.Count()) / 5) * 100)%;" title="@((Model.EventRatings.Sum(i => i.UserRating) / Model.EventRatings.Count())) out of 5 stars">
                        @((Model.EventRatings.Sum(i => i.UserRating) / Model.EventRatings.Count())) out of 5 stars
                    </li>
                }
                    else
                {
                    <li class="current-rating noratings" style="width:0%;" title="No ratings">
                        No ratings
                    </li>
                }
            </ul>
            <a href="" class="smallRateLink">Rate this event</a>
            @Html.Partial("_StarRatingTemplate")
        }
        else
        {
            <ul class="star-rating">
                @if (Model.EventRatings.Sum(i => i.UserRating) > 0)
                {
                    <li class="current-rating" style="width:@(((Model.EventRatings.Sum(i => i.UserRating) / Model.EventRatings.Count()) / 5) * 100)%;" title="@((Model.EventRatings.Sum(i => i.UserRating) / Model.EventRatings.Count())) out of 5 stars">
                        @((Model.EventRatings.Sum(i => i.UserRating) / Model.EventRatings.Count())) out of 5 stars
                    </li>
                }
            </ul>
            <div class="starSmall">You rated @Model.EventRatings.Where(i => i.UserID == Model.CurrentUserID && i.EventID == Model.ID).FirstOrDefault().UserRating stars on <br /> @Html.DisplayFor(thing => Model.EventRatings.Where(i => i.UserID == Model.CurrentUserID).FirstOrDefault().RatingDateTime, "ShortDateTime")</div>
           
                
            
            @*<ul class="star-rating">
                @if (Model.EventRatings.Sum(i => i.UserRating) > 0)
                {
                    <li class="current-rating" style="width:@(((Model.EventRatings.Sum(i => i.UserRating) / Model.EventRatings.Count()) / 5) * 100)%;">
                        Currently @(((Model.EventRatings.Sum(i => i.UserRating) / Model.EventRatings.Count()) / 5)) Stars.
                    </li>
                }
	            <li><a href="" title="1 star out of 5" class="one-star">1</a></li>
	            <li><a href="" onclick="" title="2 stars out of 5" class="two-stars">2</a></li>
	            <li><a href="" onclick="" title="3 stars out of 5" class="three-stars">3</a></li>
	            <li><a href="" onclick="" title="4 stars out of 5" class="four-stars">4</a></li>
	            <li><a href="" onclick="" title="5 stars out of 5" class="five-stars">5</a></li>
            </ul>
            <div id="starCount">Currently @((Model.EventRatings.Sum(i => i.UserRating) / Model.EventRatings.Count())) Stars</div>
            <div id="starCount">You rated x stars on datetime</div>*@
        }
        @Html.Hidden("ThumbsUp")

    </div>

</div>
<div class="clear">
</div>
<div class="spacer">
</div>
<div id="event-optionBar">
    <div class="inEventSearch fleft">
        @using (Html.BeginForm("Search", "events", FormMethod.Post, null))
        {
            @Html.TextBox("SearchTerm")
            <input type="submit" class="blue-action-button remove-bottom" value="Search" />
            @Html.HiddenFor(model => model.ID)
        }
    </div>
    <div class="filter-by-time">
        @using (Html.BeginForm("details", "events", new { id = Model.ID }, FormMethod.Post, null))
        {
            @Html.Hidden("ResetDates")
            <div class="left">
                @*<label>Show Data from:</label><br />*@
                @Html.EditorFor(m => m.FromDateTime)
            </div>
            <div class="left">
                @*<label>To:</label><br style="clear:both;" />*@
                @Html.EditorFor(m => m.ToDateTime)
            </div>
            <input type="submit" class="blue-action-button remove-bottom" value="Apply" /> <input
                class="blue-action-button remove-bottom" type="button" value="Clear" name="ClearDates"
                id="" onclick="$('#ResetDates').val('1'); $(form).submit();" />
        }
    </div>
</div>
<div class="clear">
</div>
<br style="clear: both;" />
<div id="event-details" class="clearfix">
    <ul>
        <li>
            <label>
                When:</label><div class="value">
                    @if (Model.StartDateTime.Subtract(Model.EndDateTime).Days == 0)
                    {
                        @Html.DisplayFor(e => e.StartDateTime, "FullDate") <br />
                        @Html.DisplayFor(e => e.StartDateTime, "Time") @:to @Html.DisplayFor(e => e.EndDateTime, "Time")
            }
                    else
                    {
                        @Html.DisplayFor(e => e.StartDateTime) @: to <br />
                @Html.DisplayFor(e => e.EndDateTime)
                    }
                </div>
        </li>
    </ul>
    <ul>
        <li>
            <label>Where:</label>
            <div class="value">
                @if (Model.Venue != null)
                {
                    <dd>@Model.Venue.Name<br/> @Model.Venue.Address, @Model.Venue.City<br/> (<a href="http://maps.google.com/?q=@Model.Venue.Name @Model.Venue.Address @Model.Venue.City @Model.Venue.State @Model.Venue.Zip" target="_blank">see map</a>)</dd>
                }
            </div>
        </li>
    </ul>
    <ul class="hashtags">
        <li>
            <label>
                Hashtag(s):</label><div class="value">
                    @{
                        try
                        {
                            string[] SearchT = Model.SearchTerms.Split(new string[] { " OR " }, StringSplitOptions.None);
                            string SearchTerms = "";

                            foreach (string s in SearchT)
                            {
                                SearchTerms += s + ", ";
                            }
        
                        @Html.Raw("<strong>" + SearchTerms.Substring(0, (SearchTerms.Length - 2)) + "</strong>")
                        }
                        catch
                        {
                        <strong>@Model.SearchTerms</strong>
                        }
                    }
                </div>
        </li>
    </ul>
    <ul>
        <li>
            <label>
                Cost:</label><div class="value">
                    @if (Model.Cost != null)
                    {
                        @Model.Cost
                    }
                    else
                    {
                        @:N/A
                                }
                </div>
        </li>
        <li>
            <label>
                Url:</label><div class="value">
                    <a href="@Model.WebsiteURL" target="_blank">@Model.WebsiteURL</a></div>
        </li>
        <li>
            <label>
            </label>
            <div class="value">
                @if (Model.TwitterAccount != null)
                {
                    @:tw: <a href="http://www.twitter.com/@Model.TwitterAccount">@Model.TwitterAccount</a>
                            }
                @if (Model.FacebookPageURL != null)
                {
                    @:fb: <a href="@Model.FacebookPageURL" target="_blank">@Model.FacebookPageURL</a><br/>
                            }
            </div>
        </li>
    </ul>
</div>
<div class="clear">
</div>
<div class="spacer">
</div>
<!-- TWEETS -->
<div class="grid_5 alpha omega">
    <h2>
        <span class="number" id="tweetCount">@string.Format("{0:#,###}", Model.TweetCount)</span>Tweets
        & Shoutouts</h2>
    <span class="sm-spacer"></span>
    <ul class="plain-list" id="tweetlist" style="height:500px;overflow:hidden;">
        @foreach (Epilogger.Data.Tweet EPLTweet in Model.Tweets)
        {
            @Html.Partial("_TweetTemplate", EPLTweet);
        }
    </ul>
    <span class="sm-spacer"></span>
</div>
<!-- PHOTOS & VIDEOS -->
<div class="grid_7 omega">
    <h2>
        <span class="number" id="photoCount">@string.Format("{0:#,###}", Model.ImageCount)</span>Photos
        & Videos</h2>
    <div class="image-grid" id="photosvideos">
        @foreach (Epilogger.Data.Image EPLImage in Model.Images)
        {
            @Html.Partial("_ImageTemplate", EPLImage)
        }
    </div>
    <div class="clear">
    </div>
    <span class="sm-spacer"></span>
    <p>
        @if (!IncludeDateRange)
        { 
            @: (@Html.ActionLink("See all photos and videos", "AllPhotos", "events", new { id = Model.ID }))
           }
        else
        { 
            @: (@Html.ActionLink("See all photos and videos", "AllPhotos", "events", new { id = Model.ID, f = Request.QueryString["f"], t = Request.QueryString["t"] }, new { }))
                   }
    </p>
</div>
<div class="clear">
</div>
<div class="spacer">
</div>
<div class="event-bottom">
    <!-- BLOG POSTINGS -->
    <div class="grid_4 alpha">
        <h2>
            Blog postings</h2>
        <ul class="plain-list">
            @foreach (Epilogger.Data.BlogPost TheBlogPost in Model.BlogPosts.Take(3))
            {
                <li>
                    @*<img src="@Url.Content("~/Public/images/samples/avatar.png")" class="fleft"/>*@
                    <a href="@TheBlogPost.BlogURL">@TheBlogPost.Title</a><br />
                    @*<small><a href="#">BY MICHAEL NUS</a></small><br />*@
                    @*<p>
                        After a very busy day of meetings and wheeling...</p>*@
                    @*TODO - Add move fiels to the Blog table to store more Info!*@ </li>
            }
        </ul>
        <div class="clear">
        </div>
        <p>
            (<a href="#">See all blog posts</a>) (<a href="#" class="blogposts-modal">Submit blog post</a>)</p>
    </div>
    <!-- EXTERNAL LINKS -->
    <div class="grid_4 overflowhide">
        <h2>External Links</h2>
        <ul class="plain-list">
            @foreach (Epilogger.Data.URL TheURL in Model.ExternalLinks)
            {
                <li><a href="@TheURL.ShortURL" title="@TheURL.Tweets.Where(t => t.ID == TheURL.TweetID).FirstOrDefault().Text">@TheURL.FullURL</a><br />
                    <small>
                        <img src="@Url.Content("~/Public/images/icons/tweet-black.png")" class="valign" />VIA
                        @TheURL.Tweets.Where(t => t.ID == TheURL.TweetID).FirstOrDefault().FromUserScreenName</small>
                </li>
            }
        </ul>
        <div class="clear">
        </div>
        <p>
            @if (!IncludeDateRange)
            { 
                @: (@Html.ActionLink("See all links", "alllinks", "events", new { id = Model.ID }))
           }
            else
            { 
                @: (@Html.ActionLink("See all links", "alllinks", "events", new { id = Model.ID, f = Request.QueryString["f"], t = Request.QueryString["t"] }, new { }))
                       }

                       (<a href="#" class="links-modal">Submit a link</a>)
        </p>
    </div>
    <!-- CHECKINS -->
    <div class="grid_3 omega" style="margin-top: -20px;">
        <h2>
            <span class="number">@Model.CheckInCount</span> Check-ins</h2>
        <p>
            All these lovely people attended @Model.Name!</p>
        <div class="event-checkins clearfix">
            @foreach (Epilogger.Data.CheckIn checkin in @Model.CheckIns)
            {
                Epilogger.Data.Tweet ThisTweet = checkin.Tweets.Where(t => t.ID == checkin.TweetID).FirstOrDefault();
                <a href="@checkin.FourSquareCheckInURL" target="_blank">
                    <img src="@Url.Content(ThisTweet.ProfileImageURL)" class="fleft" height="48" width="48" alt="" /></a>
            }
        </div>
    </div>
</div>
<br style="clear: both;" />
@*<div class="grid_4 omega">
    <small class="tinylabel">Sponsors
        & Supporters</small>
    <img src="@Url.Content("~/Public/images/samples/ad.png")" alt="" />
    <img src="@Url.Content("~/Public/images/samples/ad.png")" alt="" />
</div>*@
<script>
    head.ready(function () {
        $("a[rel^='prettyPhoto']").prettyPhoto({
            theme: 'light_square',
            animation_speed: 'fast',
            overlay_gallery: false,
            changepicturecallback: function () { changeDescription(); }
        });

        $(".blogposts-modal").colorbox({
            width: "60%", height: "60%",
            href: '@Url.Action("AddBlogPost", "Events")'
        });
        $(".links-modal").colorbox({
            width: "60%", height: "60%",
            href: '@Url.Action("AddLink", "Events")'
        });
    });
</script>


