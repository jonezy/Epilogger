@using Epilogger.Web;
@model Epilogger.Web.Models.EventDisplayViewModel
@{
    ViewBag.Title = "Epilogger - " + Model.Name;
    
}
@{
    bool IncludeDateRange = false;
    int YesCount = 0;

    if (Request.QueryString["f"] != null) {
        YesCount++;
    }
    if (Request.QueryString["t"] != null) {
        YesCount++;
    }
    if (YesCount == 2) { 
        IncludeDateRange = true; 
    }
}
<script type="text/javascript" language="javascript">
    head.js('@Url.Content("~/Public/js/EventDetails.js")');
</script>


@if (Model.Tweets.FirstOrDefault() != null) {
    <script language="javascript" type="text/javascript">
        var pageLoadTime = '@string.Format("{0:yyyy-MM-dd HH:mm:ss}", Model.Tweets.FirstOrDefault().CreatedDate)';
    </script>
} else {
    <script language="javascript" type="text/javascript">
        var pageLoadTime = '@string.Format("{0:yyyy-MM-dd HH:mm:ss}", DateTime.UtcNow)';
    </script>
}
<script language="javascript" type="text/javascript">
    var EventID = @Model.ID;

    var EventName = '@Model.Name';
    var EventURL = 'http://www.epilogger.com/Events/Details/@Model.ID';
    var HasSubscribed = @Model.HasSubscribed.ToString().ToLower();
    
    var disableAutoupdate = false;

    //Parameters to control the Tweet list
    var updateTimeout = 5000;
    var updateRate = 10000;
    var prologuePostsUpdates = 1;
    var isFirstFrontPage = 1;   
    var postsOnPage = new Array;
    var postsOnPageQS = '';
    var maxItemsOnPage = 6;

    //Parameters to control the Image List
    var photoUpdateTimeout = 5000;
    var photoUpdateRate = 15000;
    var photoProloguePostsUpdates = 1;
    var photoIsFirstFrontPage = 1;
    var photoPageLoadTime = pageLoadTime;
    
    var photoPostsOnPage = new Array;
    var photoPostsOnPageQS = '';
    var photoMaxItemsOnPage = 9;
    
</script>
<style type="text/css">
    .tweet {
        display: block;
        clear: both;
        position: relative;
        z-index: 1000;
    }
    
    .newupdates {
        display: none;
        background: #eebad1;
    }
</style>
@Html.Partial("EventToolbar")

<div class="grid_12 alpha">
    <h1>@Model.Name</h1>
    <h2>@Model.SubTitle</h2>

    <div id="event-intro">
        @Html.Raw(Model.Description.Replace("\r", "<br />"))
    </div>
    <br style="clear:both;" />
    <div class="grid_1 alpha">
        @if (Model.HasSubscribed) {
            using (Html.BeginForm("unsubscribe", "events", FormMethod.Post, new { @class = "remove-bottom" })) {
                <input type="submit" value="Unsubscribe" name="SubscribeToEvent" class="blue-action-button remove-bottom" id="" />
                @Html.HiddenFor(model => model.ID)
            }
        } else {
            using (Html.BeginForm("subscribe", "events", FormMethod.Post, new { @class = "remove-bottom" })) {
                <input type="submit" value="Subscribe" name="SubscribeToEvent" class="blue-action-button remove-bottom" id="" />
                @Html.HiddenFor(model => model.ID)
            }
        }
    </div>
    <div class="grid_2">
        @if (!Model.HasUserRated) {
            using (Html.BeginForm("eventRating", "events", FormMethod.Post, new { @class = "remove-bottom" })) {   
                <input class="remove-bottom" type="button" value="+" name="ThumbsUpButton" id="" onclick="$('#ThumbsUp').val('1'); $(form).submit();" /> @:&nbsp;/&nbsp;
                <input class="remove-bottom" type="button" value="-" name="ThumbsDownButton" id="" onclick="$('#ThumbsUp').val('0'); $(form).submit();" />
                @Html.HiddenFor(model => model.ID)
                @Html.Hidden("ThumbsUp")
            }
        } else {
            @Model.EventRatings.Where(i => i.UserRating == "+").Count().ToString() @: ThumbsUp<br/>
            @Model.EventRatings.Where(i => i.UserRating == "-").Count().ToString() @: ThumbsDown<br/>
            @: You voted on:
            @String.Format("{0:MMM d, yyyy h:mm}{1}", Model.EventRatings.Where(i => i.UserID == Model.CurrentUserID).FirstOrDefault().RatingDateTime.ToUserTimeZone(Model.TimeZoneOffSet), Model.EventRatings.Where(i => i.UserID == Model.CurrentUserID).FirstOrDefault().RatingDateTime.ToUserTimeZone(Model.TimeZoneOffSet).ToString("tt").ToLower())
        }
    </div>
    <div class="grid_6 filter-by-time clearfix">
        @using (Html.BeginForm("details", "events", new { id = Model.ID }, FormMethod.Post,null)) {
            
            <div class="left">
                <label>Show Data from:</label><br />
                @Html.EditorFor(m => m.FromDateTime)
            </div>
            <div class="left">
                <label>To:</label><br style="clear:both;" />
                @Html.EditorFor(m => m.ToDateTime) <input type="submit" value="Apply" />
            </div>            
            @*@:<label>Show Data from:</label> @Html.TextBoxFor(m => m.FromDateTime) &nbsp;&nbsp;<label>To</label>&nbsp;&nbsp; @Html.TextBoxFor(m => m.ToDateTime) &nbsp;&nbsp;<input type="submit" value="Apply" />*@
@*            <script type="text/javascript">
                head.ready(function () {
                    $("#FromDateTime").AnyTime_picker(
                            { format: "%M %d, %Y %l:%i %p" });
                    $("#ToDateTime").AnyTime_picker(
                            { format: "%M %d, %Y %l:%i %p" });

                    //If there are dates set, disable the auto refresh events
                    if ($("#FromDateTime").val() != '') {
                        if ($("#ToDateTime").val() != '') {
                            disableAutoupdate = true;
                        }
                        else {
                            disableAutoupdate = false;
                        }
                    }
                    else {
                        disableAutoupdate = false;
                    }


                    function setDate(fd, td) {
                        fd = $("#FromDateTime")
                        td = $("#ToDateTime")
                    }
                });
            </script>*@
        }
    </div>


</div>

<div class="clear"></div>
<div class="spacer"></div>
<div id="event-details" class="clearfix">
    <ul>
        <li><label>When:</label><div class="value">
            @if (Model.StartDateTime.Subtract(Model.EndDateTime).Days == 0) {
                @String.Format("{0:MMMM dd, yyyy}", Model.StartDateTime.ToUserTimeZone(Model.TimeZoneOffSet)) <br />
                @String.Format("{0:h:mm tt}", Model.StartDateTime.ToUserTimeZone(Model.TimeZoneOffSet)) @:to @String.Format("{0:h:mm tt}", Model.EndDateTime.ToUserTimeZone(Model.TimeZoneOffSet))
            } else {
                @String.Format("{0:MMM d, yyyy h:mm}{1}", Model.StartDateTime.ToUserTimeZone(Model.TimeZoneOffSet), Model.StartDateTime.ToUserTimeZone(Model.TimeZoneOffSet).ToString("tt").ToLower()) @: to <br />
                @String.Format("{0:MMM d, yyyy h:mm}{1}", Model.EndDateTime.ToUserTimeZone(Model.TimeZoneOffSet), Model.EndDateTime.ToUserTimeZone(Model.TimeZoneOffSet).ToString("tt").ToLower())
            }    
        </div></li>

    </ul>
    <ul>
        <li><label>Where:</label><div class="value"></div></li>
    </ul>
    <ul class="hashtags">
        <li><label>Hastag(s):</label><div class="value">
            @{
                try {
                    string[] SearchT = Model.SearchTerms.Split(new string[] { " OR " }, StringSplitOptions.None);
                    string SearchTerms = "";

                    foreach (string s in SearchT) {
                        SearchTerms += s + ", ";
                    }
        
                    @Html.Raw("<strong>" + SearchTerms.Substring(0, (SearchTerms.Length - 2)) + "</strong>")
                } catch {
                    <strong>@Model.SearchTerms</strong>
                }
            }    
        </div></li>
    </ul>    
    <ul>
        <li><label>Cost:</label><div class="value">
            @if (Model.Cost != null) {
                @Model.Cost
            } else {
                @:N/A
            }
        </div></li>
        <li><label>Url:</label><div class="value"><a href="@Model.WebsiteURL" target="_blank">@Model.WebsiteURL</a></div></li>
        <li><label></label><div class="value">
            @if (Model.TwitterAccount != null) {
                @:tw: <a href="http://www.twitter.com/@Model.TwitterAccount">@Model.TwitterAccount</a>
            }
            @if (Model.FacebookPageURL != null) {
                @:fb: <a href="@Model.FacebookPageURL" target="_blank">@Model.FacebookPageURL</a><br />
            }    
        </div></li>
    </ul>

</div>
<div class="clear"></div>
<div class="spacer"></div>

<!-- TWEETS -->
<div class="grid_5 alpha omega">
    <h2><span class="number" id="tweetCount">@string.Format("{0:#,###}", Model.TweetCount)</span>Tweets & Shoutouts</h2>
    <span class="sm-spacer"></span>
    <ul class="plain-list" id="tweetlist">
        @foreach (Epilogger.Data.Tweet EPLTweet in Model.Tweets) {
            @Html.Partial("_TweetTemplate", EPLTweet);
        }
    </ul>
    <span class="sm-spacer"></span>
</div>

<!-- PHOTOS & VIDEOS -->
<div class="grid_7 omega">
    <h2><span class="number" id="photoCount">@string.Format("{0:#,###}", Model.ImageCount)</span>Photos & Videos</h2>
    <div class="image-grid" id="photosvideos">
        @foreach (Epilogger.Data.Image EPLImage in Model.Images) {
            <div class="withcomment newPhotoupdates" id="photo-@EPLImage.ID">
                <a href="@EPLImage.Fullsize" rel="prettyPhoto[latestphotos]" title="@EPLImage.ID" id="@EPLImage.ID">
                    <img src="@EPLImage.Thumb" height="154" width="180" border="0" alt="" /></a>
                <a href="#" class="commentbubble">
                    @EPLImage.ImageMetaData.Count()
                </a>
            </div>
        }
    </div>
    <div class="clear"></div>
    <span class="sm-spacer"></span>
    <p>@if (!IncludeDateRange) { 
            @: (@Html.ActionLink("See all photos and videos", "AllPhotos/" + Model.ID, "Events"))
       } else { 
           @: (@Html.ActionLink("See all photos and videos", "AllPhotos/" + Model.ID, "Events", new { f = Request.QueryString["f"], t = Request.QueryString["t"] }, new { }))
                
       }
    </p>
</div>

<div class="clear"></div>
<div class="spacer"></div>

<div class="event-bottom">
    <!-- BLOG POSTINGS -->
    <div class="grid_4 alpha">
        <h2>Blog postings</h2>
        <ul class="plain-list">
            @foreach (Epilogger.Data.BlogPost TheBlogPost in Model.BlogPosts.Take(3)) {
                <li>
                    <img src="@Url.Content("~/Public/images/samples/avatar.png")" class="fleft"/>
                    <a href="@TheBlogPost.BlogURL">@TheBlogPost.Title</a><br />
                    <small><a href="#">BY MICHAEL NUS</a></small><br />
                    <p>
                        After a very busy day of meetings and wheeling...</p>
                    @*TODO - Add move fiels to the Blog table to store more Info!*@ </li>
            }
        </ul>
        <div class="clear"></div>
        <p>(<a href="#">See all blog posts</a>)</p>
    </div>

    <!-- EXTERNAL LINKS -->
    <div class="grid_4 overflowhide">
        <h2>External Links</h2>
        <ul class="plain-list">
            @foreach (Epilogger.Data.URL TheURL in Model.ExternalLinks) {
                <li><a href="@TheURL.ShortURL" title="@TheURL.Tweets.Where(t => t.ID == TheURL.TweetID).FirstOrDefault().Text">@TheURL.FullURL</a><br />
                    <small><img src="@Url.Content("~/Public/images/icons/tweet-black.png")" class="valign" />VIA @TheURL.Tweets.Where(t => t.ID == TheURL.TweetID).FirstOrDefault().FromUserScreenName</small>
                </li>
            }
        </ul>
        <div class="clear"></div>
        <p>(<a href="#">See all links</a>)</p>
    </div>

    <!-- CHECKINS -->
    <div class="grid_3 omega" style="margin-top:-20px;">
        <h2><span class="number">@Model.CheckInCount</span> Check-ins</h2>
        <p>All these lovely people attended @Model.Name!</p>
        <div class="event-checkins clearfix">
            @foreach (Epilogger.Data.CheckIn checkin in @Model.CheckIns) {
                Epilogger.Data.Tweet ThisTweet = checkin.Tweets.Where(t => t.ID == checkin.TweetID).FirstOrDefault();
                <a href="@checkin.FourSquareCheckInURL" target="_blank"><img src="@Url.Content(ThisTweet.ProfileImageURL)" class="fleft" height="48" width="48" alt="" /></a>
            }
        </div>

    </div>
</div>
<br style="clear:both;" />

<div class="grid_4 omega">
    @*TODO Write this funcitonality into the application*@ <small class="tinylabel">Sponsors
        & Supporters</small>
    <img src="@Url.Content("~/Public/images/samples/ad.png")" alt="" />
    <img src="@Url.Content("~/Public/images/samples/ad.png")" alt="" />
</div>


<script>
    head.ready(function () {
        $("a[rel^='prettyPhoto']").prettyPhoto({
            theme: 'light_square',
            animation_speed: 'fast',
            overlay_gallery: false,
            changepicturecallback: function () { changeDescription(); }
        });
    });
</script>
