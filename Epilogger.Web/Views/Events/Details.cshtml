@using Epilogger.Web;
@model Epilogger.Web.Models.EventDisplayViewModel
@{
    ViewBag.Title = "Epilogger - " + Model.Name;
    
}
<script type="text/javascript" language="javascript">
    head.js('@Url.Content("~/Public/js/EventDetails.js")');
</script>
@if (Model.Tweets.FirstOrDefault() != null) {
    <script language="javascript" type="text/javascript">
        var pageLoadTime = '@string.Format("{0:yyyy-MM-dd HH:mm:ss}", Model.Tweets.FirstOrDefault().CreatedDate)';
    </script>
} else {
    <script language="javascript" type="text/javascript">
        var pageLoadTime = '@string.Format("{0:yyyy-MM-dd HH:mm:ss}", DateTime.UtcNow)';
    </script>
}
<script language="javascript" type="text/javascript">
    var EventID = @Model.ID;

    var EventName = '@Model.Name';
    var EventURL = 'http://www.epilogger.com/Events/Details/@Model.ID';
    var HasSubscribed = @Model.HasSubscribed.ToString().ToLower();
    
    //Parameters to control the Tweet list
    var updateTimeout = 5000;
    var updateRate = 10000;
    var prologuePostsUpdates = 1;
    var isFirstFrontPage = 1;   
    var postsOnPage = new Array;
    var postsOnPageQS = '';
    var maxItemsOnPage = 6;

    //Parameters to control the Image List
    var photoUpdateTimeout = 5000;
    var photoUpdateRate = 15000;
    var photoProloguePostsUpdates = 1;
    var photoIsFirstFrontPage = 1;
    var photoPageLoadTime = pageLoadTime;
    
    var photoPostsOnPage = new Array;
    var photoPostsOnPageQS = '';
    var photoMaxItemsOnPage = 9;
    
</script>
<style type="text/css">
    .tweet {
        display: block;
        clear: both;
        position: relative;
        z-index: 1000;
    }
    
    .newupdates {
        display: none;
        background: #eebad1;
    }
</style>
<ul id="subnavigation">
    <li>@Html.ActionLink("OVERVIEW", "Details/" + Model.ID, "Events")</li>
    <li>@Html.ActionLink("PHOTOS", "AllPhotos/" + Model.ID, "Events")</li>
    <li>@Html.ActionLink("TWEETS", "AllTweets/" + Model.ID, "Events")</li>
    <li></li>
    <li></li>
    <li></li>
    <li></li>
</ul>
<span class="spacer"></span>
<div class="grid_7 alpha">
    <h1>@Model.Name</h1>
    <h2>@Model.SubTitle</h2>
    @if (Model.HasSubscribed) {
        using (Html.BeginForm("unsubscribe", "events", FormMethod.Post)) {
            <input type="submit" value="Unsubscribe" name="SubscribeToEvent" id="" />
            @Html.HiddenFor(model => model.ID)
        }
    } else {
        using (Html.BeginForm("subscribe", "events", FormMethod.Post)) {
            <input type="submit" value="Subscribe to Event" name="SubscribeToEvent" id="" />
            @Html.HiddenFor(model => model.ID)
        }
    }


    @if (!Model.HasUserRated)
    {
        using (Html.BeginForm("eventRating", "events", FormMethod.Post))
        {   
            <input type="button" value="+" name="ThumbsUpButton" id="" onclick="$('#ThumbsUp').val('1'); $(form).submit();" /> @: &nbsp;/&nbsp;
            <input type="button" value="-" name="ThumbsDownButton" id="" onclick="$('#ThumbsUp').val('0'); $(form).submit();" />
            @Html.HiddenFor(model => model.ID)
            @Html.Hidden("ThumbsUp")
        }
    }
    else
    {
        @Model.EventRatings.Where(i => i.UserRating == "+").Count().ToString() @: Thumbs Up <br />
        @Model.EventRatings.Where(i => i.UserRating == "-").Count().ToString() @: Thumbs Down <br />
        @: You voted on: 
        @String.Format("{0:MMM d, yyyy h:mm}{1}", Model.EventRatings.Where(i => i.UserID == Model.CurrentUserID).FirstOrDefault().RatingDateTime.ToUserTimeZone(Model.TimeZoneOffSet), Model.EventRatings.Where(i => i.UserID == Model.CurrentUserID).FirstOrDefault().RatingDateTime.ToUserTimeZone(Model.TimeZoneOffSet).ToString("tt").ToLower())
        
    }
    
    



    <p>@Html.Raw(Model.Description.Replace("\r", "<br />"))
        @if (Model.Description.Length > 266)
        { 
            @: ... (<a href="#">read more</a>)
                }
    </p>

    
</div>
<div class="grid_4 omega">
    @*TODO Write this funcitonality into the application*@ <small class="tinylabel">Sponsors
        & Supporters</small>
    <img src="@Url.Content("~/Public/images/samples/ad.png")" alt="" />
    <img src="@Url.Content("~/Public/images/samples/ad.png")" alt="" />
</div>
<div class="clear">
</div>
@*<span class="spacer"></span>*@
<div id="event-details">
    <span class="event-details-label">When:</span> <span class="event-details-detail">
        @if (Model.StartDateTime.Subtract(Model.EndDateTime).Days == 0)
        {
            @String.Format("{0:MMMM dd, yyyy}", Model.StartDateTime.ToUserTimeZone(Model.TimeZoneOffSet))
            @: <br />
            @String.Format("{0:h:mm tt}", Model.StartDateTime.ToUserTimeZone(Model.TimeZoneOffSet))
            @: to
            @String.Format("{0:h:mm tt}", Model.EndDateTime.ToUserTimeZone(Model.TimeZoneOffSet))
        }
        else
        {
            @String.Format("{0:MMM d, yyyy h:mm}{1}", Model.StartDateTime.ToUserTimeZone(Model.TimeZoneOffSet), Model.StartDateTime.ToUserTimeZone(Model.TimeZoneOffSet).ToString("tt").ToLower())
            @: to <br />
            @String.Format("{0:MMM d, yyyy h:mm}{1}", Model.EndDateTime.ToUserTimeZone(Model.TimeZoneOffSet), Model.EndDateTime.ToUserTimeZone(Model.TimeZoneOffSet).ToString("tt").ToLower())
        }
    </span><span class="event-details-label">Where:</span> <span class="event-details-detail">
        @*Tattoo Rock Parlour<br/>
		567 Queen Street West<br/>
		Toronto (<a href="#">map</a>)*@ </span><span class="event-details-label">URL:<br />
            <span style="position: relative; top: 5px">Hashtag:</span> </span><span class="event-details-detail">
                <a href="@Model.WebsiteURL" target="_blank">@Model.WebsiteURL</a><br />
                @{
                    try
                    {
                        string[] SearchT = Model.SearchTerms.Split(new string[] { " OR " }, StringSplitOptions.None);
                        string SearchTerms = "";
                        foreach (string s in SearchT)
                        {
                            SearchTerms += s + ", ";
                        }
                    @Html.Raw("<strong>" + SearchTerms.Substring(0, (SearchTerms.Length - 2)) + "</strong>")
                    }
                    catch
                    {
                    <strong>@Model.SearchTerms</strong>
                    }
                }
            </span><span class="event-details-label">Cost:
                <br />
                <span style="position: relative; top: 5px">tw:</span><br />
                <span style="position: relative; top: 10px">fb:</span> </span><span class="event-details-detail">
                    @if (Model.Cost != null)
                    {
                        @Model.Cost
                    }<br />
                    @if (Model.TwitterAccount != null)
                    {
                        <a href="http://www.twitter.com/@Model.TwitterAccount">@Model.TwitterAccount</a>
                    }
                    @if (Model.FacebookPageURL != null)
                    {
                        <a href="@Model.FacebookPageURL" target="_blank">@Model.FacebookPageURL</a><br />
                    }
                </span>
</div>
<div class="clear">
</div>
<div class="spacer">
</div>
<!-- PHOTOS & VIDEOS -->
<div class="grid_7 alpha">
    <h2>
        <span class="number" id="photoCount">@string.Format("{0:#,###}", Model.ImageCount)</span>
        Photos & Videos</h2>
    <h4>
        filter:</h4>
    <span class="sm-spacer"></span>
    <div class="image-grid" id="photosvideos">
        @foreach (Epilogger.Data.Image EPLImage in Model.Images)
        {
            <div class="withcomment newPhotoupdates" id="photo-@EPLImage.ID">
                <a href="@EPLImage.Fullsize" rel="prettyPhoto[latestphotos]" title="@EPLImage.ID" id="@EPLImage.ID">
                    <img src="@EPLImage.Thumb" height="154" width="180" border="0" alt="" /></a>
                <a href="#" class="commentbubble">
                    @EPLImage.ImageMetaData.Count()
                </a>
            </div>
        }
    </div>
    <div class="clear">
    </div>
    <div class="spacer">
    </div>
    <p>
        (@Html.ActionLink("See all photos and videos", "AllPhotos/" + Model.ID, "Events"))</p>
</div>
<!-- TWEETS -->
<div class="grid_4 omega">
    <h2>
        <span class="number" id="tweetCount">@string.Format("{0:#,###}", Model.TweetCount)</span>
        Tweets & Shoutouts</h2>
    <h4>
        filter:</h4>
    <span class="sm-spacer"></span>
    <ul class="plain-list" id="tweetlist">
        @foreach (Epilogger.Data.Tweet EPLTweet in Model.Tweets)
        {
            <li id="Tweet-@EPLTweet.TwitterID" class="tweet">
                <img src="@EPLTweet.ProfileImageURL" class="fleft" height="48" width="48" alt="" />
                <small><a href="http://www.twitter.com/@EPLTweet.FromUserScreenName" target="_blank">@EPLTweet.FromUserScreenName</a></small>
                <p>@Html.Raw(EPLTweet.TextAsHTML)</p>
            </li>
        }
        @*<li class="tweet">
		</li>*@
    </ul>
    <span class="sm-spacer"></span>
</div>
<div class="clear">
</div>
<div class="spacer">
</div>
@*<div class="big-spacer"></div>*@
<!-- BLOG POSTINGS -->
<div class="grid_4 alpha">
    <h2>
        Blog postings</h2>
    <ul class="plain-list">
        @foreach (Epilogger.Data.BlogPost TheBlogPost in Model.BlogPosts.Take(3))
        {
            <li>
                <img src="@Url.Content("~/Public/images/samples/avatar.png")" class="fleft"/>
                <a href="@TheBlogPost.BlogURL">@TheBlogPost.Title</a><br />
                <small><a href="#">BY MICHAEL NUS</a></small><br />
                <p>
                    After a very busy day of meetings and wheeling...</p>
                @*TODO - Add move fiels to the Blog table to store more Info!*@ </li>
        }
    </ul>
    <div class="clear">
    </div>
    <p>
        (<a href="#">See all blog posts</a>)</p>
</div>
<!-- EXTERNAL LINKS -->
<div class="grid_3 overflowhide">
    <h2>
        External Links</h2>
    <ul class="plain-list">
        @foreach (Epilogger.Data.URL TheURL in Model.ExternalLinks)
        {
            <li><a href="@TheURL.ShortURL" title="@TheURL.Tweets.Where(t => t.ID == TheURL.TweetID).FirstOrDefault().Text">@TheURL.FullURL</a><br />
                <small>
                    <img src="@Url.Content("~/Public/images/icons/tweet-black.png")" class="valign" />VIA
                    @TheURL.Tweets.Where(t => t.ID == TheURL.TweetID).FirstOrDefault().FromUserScreenName</small>
            </li>
        }
    </ul>
    <div class="clear">
    </div>
    <p>
        (<a href="#">See all links</a>)</p>
</div>
<!-- CHECKINS -->
<div class="grid_4 omega">
    <h2>
        <span class="number">@Model.CheckInCount</span> Check-ins</h2>
    <p>
        All these lovely people attended @Model.Name!</p>
    <ul class="plain-list">
        @foreach (Epilogger.Data.CheckIn checkin in @Model.CheckIns)
        {
            <li>
                @{
            Epilogger.Data.Tweet ThisTweet = checkin.Tweets.Where(t => t.ID == checkin.TweetID).FirstOrDefault();
                }
                <img src="@Url.Content(ThisTweet.ProfileImageURL)" class="fleft" height="48" width="48" alt="" />
                <small><a href="http://www.twitter.com/@ThisTweet.FromUserScreenName">@ThisTweet.FromUserScreenName</a></small>
                <p>@Html.Raw(ThisTweet.TextAsHTML)</p>
            </li>
        }
    </ul>
    @*
    
    
    
    
    <span class="image-grid">
        @foreach (Epilogger.Data.CheckIn checkin in @Model.CheckIns.OrderByDescending(c => c.CheckInDateTime).Take(5))
        {
            <div>
                <a href="@checkin.FourSquareCheckInURL"><img src="@Url.Content(checkin.Tweets.Where(t => t.ID == checkin.TweetID).FirstOrDefault().ProfileImageURL)" alt="" /></a>
                <a href="@checkin.FourSquareCheckInURL">@Html.Raw(checkin.Tweets.Where(t => t.ID == checkin.TweetID).FirstOrDefault().TextAsHTML)</a>
            </div>
        }

	</span>*@
</div>
<script type="text/javascript" charset="utf-8">
    head.ready(function () {
        $("a[rel^='prettyPhoto']").prettyPhoto({
            theme: 'light_square',
            animation_speed: 'fast',
            overlay_gallery: false,
            changepicturecallback: function () { changeDescription(); }
        });
    });
</script>
