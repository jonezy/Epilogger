@model Epilogger.Web.Models.BrowseCategoriesDisplayViewModel
@{
    Layout = "~/Views/Shared/_InteriorLayout.cshtml";
    ViewBag.Title = @Model.CategoryName + " | Epilogger";
}
<div id="events-nav">
    <h1>@Model.CategoryName.ToUpper()</h1>
    <br style="clear: both;" />
    @foreach (Epilogger.Data.EventCategory item in Model.EventCategories) {
        <div class="browse-category-list-item" style="background-image:url(@Url.Content("~/Public/images/category-icons/" + item.ID + ".png"))">@Html.RouteLink(item.CategoryName, "BrowseCategtoryRoutes", new { CategoryName = item.URLStub })</div>
    }
</div>
<div id="events-content">
    <h2>
        EVENTS:</h2>
    @if (Model.Events.Count() == 0) {
        <div class="dashboard-event-item clearfix">
            There are currently no events going on. Why not add one?!</div>
        <span class="spacer"></span>        
        <a href="#" class="addEventTrigger blue-action-button" onclick="return false;">Add an Event</a>
    }
    @foreach (var item in Model.Events)
    {
        <div class="dashboard-event-item clearfix">
            <div class="month-day">
                <div class="month">@Html.DisplayFor(thing => item.StartDateTime, "Month")</div>
                <h2>@Html.DisplayFor(thing => item.StartDateTime, "Day")</h2>
                <h3>@Html.Encode(item.StartDateTime.Year)</h3>
                <div class="icon" style="background-image:url(@Url.Content("~/Public/images/date-icons/" + item.EventCategoryID + ".png"))">
                </div>
            </div>
            <div class="event-content">
                <h6>@Html.ActionLink(item.Name, "details", "events", new { @id = item.EventSlug }, null)</h6>
                <div class="event-content-time">@Html.DisplayFor(thing => item.StartDateTime, "Time")</div>
                <div class="event-content-searchterms">@item.SearchTerms</div>
            </div>
            <div class="event-totals">
                <div class="total-tweets">@item.TotalTweets</div>
                <div class="total-media">@item.TotalMedia</div>
            </div>
        </div>
    }
</div>
