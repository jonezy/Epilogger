@model Epilogger.Web.Models.TweetReplyViewModel

<script language="javascript" type="text/javascript">
    $(document).ready(function () {
        //set max length
        var max_length = 10;

        //load in max characters when page loads
        $("#counter").html(max_length);

        //run listen key press
        whenkeydown(max_length);
    });

    whenkeydown = function(max_length) {
        $("#newTweet").unbind().keyup(function () {
            //check if the appropriate text area is being typed into
            if (document.activeElement.id === "newTweet") {
                //get the data in the field
                var text = $(this).val();

                //set number of characters
                var numofchars = text.length;

                //set the chars left
                var chars_left = max_length - numofchars;

                //check if we are still within our maximum number of characters or not
                if (numofchars <= max_length) {
                    //set the length of the text into the counter span
                    $("#counter").html("").html(chars_left).css("color", "#000000");
                } else {
                    //style numbers in red
                    $("#counter").html("").html(chars_left).css("color", "#FF0000");
                }
            }
        });
    };
</script>


<h2>
    Reply to a Tweet
</h2>
<div>
    @{ var ttvm = new Epilogger.Web.Models.TweetTemplateViewModel { Tweet = Model.Tweet, CanDelete = false, EventId = Model.Event.ID };}
    @Html.Partial("_TweetTemplate", ttvm)
</div>

@using (Html.BeginForm())
{
    @Html.TextArea("newTweet", null, new { @class="tweetBox" })
    <div class="fright">
        <span id="counter"><strong>140</strong></span>
        <input type="submit" value="Tweet" class="blue-action-button confirm" />
    </div>
    
    
}





