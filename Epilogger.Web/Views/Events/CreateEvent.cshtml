@using System.Diagnostics
@using Epilogger.Web.Models
@using FlickrNet
@using Timezone.Framework
@model CreateBasicEventViewModel
@{
    Layout = "~/Views/Events/_CreateEventLayout.cshtml";
    //Layout = "~/Views/Shared/_PopupLayout.cshtml";
    ViewBag.Title = "Create a new event | Epilogger";
}



@section head {
    <title>@ViewBag.Title</title>
    
    <script type="text/javascript">
        $(function () {
            $("#StartDateTime").datepicker({ dateFormat: 'M dd, yy' });
            $("#anim").change(function () {
                $("#StartDateTime").datepicker("option", "showAnim", $(this).val());
            });
        });
        $(function () {
            $("#EndDateTime").datepicker({ dateFormat: 'M dd, yy' });
            $("#anim").change(function () {
                $("#EndDateTime").datepicker("option", "showAnim", $(this).val());
            });
        });
        $(document).ready(function () {
            var x = $('#event-popup').height();
            var y = $('#event-popup').width();

            parent.$.colorbox.resize({ width: 560, height: 510 });


            $("#StartDateTime").change(function () {
                test = $(this).datepicker('getDate');
                testm = new Date(test.getTime());
                testm.setDate(testm.getDate());

                $("#EndDateTime").datepicker("option", "minDate", testm);
            });

        });

    </script>   
}


    <div class="form_process">
        <img src="/Public/images/CreateEvent/BasicInfoActive.png" alt="Basic Information" />
    </div>
    @Html.ValidationSummary("Please correct the following issues")
    @using (Html.BeginForm("CreateEvent", "Events", FormMethod.Post, new { id = "CreateForm" }))
    {
        <fieldset class="popForm">
            <div class="">
                <p>@Html.Label("Event title:") @Html.EditorFor(model => model.Name)</p>
                <p>@Html.Label("Event subtitle:") @Html.EditorFor(model => model.Subtitle)</p>
                <div class="hint">
                    (ex: Presented by Aperture Laboratories)
                </div>
                <p>@Html.LabelFor(model => model.CategoryId) @Html.DropDownListFor(model => model.CategoryId, Model.Categories, "Select your event category")</p>
                
                <div class="">
                    <p>@Html.Label("Start date:") @Html.EditorFor(m => m.StartDateTime, "DateTimeOneline")

                        @Html.DropDownList("start_times", new SelectList(CreateBasicEventViewModel.Times, "Value", "Text", string.Format("{0:hh:mm}", Model.StartDateTime.ToLocalTime())), new { @class = "times" })
                        
                        @Html.DropDownList("AMPMstartTime", new SelectList(new List<SelectListItem> {
                                            new SelectListItem
                                            {
                                                Text = "am",
                                                Value = "am"
                                            },
                                            new SelectListItem
                                            {
                                                Text = "pm",
                                                Value = "pm"
                                            }}, "Value", "Text", string.Format("{0:tt}", Model.StartDateTime.ToLocalTime()).ToLower()), 
                                            new { @class = "AMPM" })
                        
                        @Html.DropDownList("timeZone", new SelectList(CreateBasicEventViewModel.TimeZones, "TimeZoneOffset", "TimeZoneName", TimeZoneManager.UserTimeZone.BaseUtcOffset.Hours), new { @class = "timeZoneSelect" })
                    </p>
                </div>

                <div class="under_control_notice">
                    @Html.CheckBox("End_Date") Specify end time</div>
                <div id="endDate" class="invisible dropdown_image">
                    @Html.Label("End date:") @Html.EditorFor(m => m.EndDateTime, "DateTimeOneline")
                    
                    @{
                        Debug.Assert(Model.EndDateTime != null, "Model.EndDateTime != null");

                    }
                    @Html.DropDownList("end_times", new SelectList(CreateBasicEventViewModel.Times, "Value", "Text", string.Format("{0:hh:mm}", ((DateTime) Model.EndDateTime).ToLocalTime())), new { @class = "times" })
                    
                    @Html.DropDownList("AMPMendTime", new SelectList(new List<SelectListItem> {
                                            new SelectListItem
                                            {
                                                Text = "am",
                                                Value = "am"
                                            },
                                            new SelectListItem
                                            {
                                                Text = "pm",
                                                Value = "pm"
                                            }}, "Value", "Text", string.Format("{0:tt}", ((DateTime) Model.EndDateTime).ToLocalTime()).ToLower()), 
                                            new { @class = "AMPM" })
                </div>
                <p>
                    @Html.Label("Collect content:")
                    @Html.DropDownList("collectDataTimes", new SelectList(CreateBasicEventViewModel.CollectDataList, "Value", "Text"))
                </p>
                <div class="dashed">
                </div>
                <input type="submit" class="submitEvent" value="ALL DONE WITH BASIC INFO" />
            </div>
        </fieldset>
    }

<script type="text/javascript">
    var status = 0;
    $('#End_Date').bind("change", function () {
        $('#endDate').slideToggle(200);
        if (status == 0) {
            parent.$.colorbox.resize({ width: 560, height: 570 });
            status = 1;
        }
        else {
            parent.$.colorbox.resize({ width: 560, height: 510 });
            status = 0;
        }

    });
</script>
