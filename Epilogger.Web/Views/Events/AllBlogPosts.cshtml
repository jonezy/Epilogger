@using Epilogger.Web;
@using Epilogger.Web.Models;
@model Epilogger.Web.Models.AllBlogPostsViewModel
@{
    Layout = "~/Views/Shared/_InteriorLayout.cshtml";
    ViewBag.Title = Model.Name + " - Blog Posts | Epilogger";
}

@*New event menu*@
@Html.Partial("Menu", Model.ToolbarViewModel)
<div class="spacer"></div>

<div id="events-nav">
    <h1>ALL @Model.TotalRecords BLOG POSTS</h1>
    <h2>FROM @Model.Name</h2>

    <p> Submit your blog post and see your hard work in lights on the page where everyone is looking to find out what happened last night!</p>
    
    <span class="spacer"></span>

    <a href="#" class="blue-action-button blogposts-modal">Submit blog post</a>
    
</div>
<div id="events-content">
  
    @foreach (BlogPostDisplayViewModel BP in Model.BlogPosts)
    {
        <div class="blogPost">
            @{
                string TheURL;
                if (BP.Url.Contains("http://")) 
                { 
                    TheURL = BP.Url;
                } 
                else 
                {
                    TheURL = "http://" + BP.Url;
                }   
            }
            <a href="@TheURL" target="_blank" class="title">@BP.Title</a><br />
            <div class="blogDescription">
                @BP.Description<br />
                <span class="blogPostDate">@Html.DisplayFor(model => BP.DateTime)</span>
                @*<a href="@TheURL" class="small">Read the full post &raquo;</a>*@
            </div>
        </div>
    }
</div>

<script>
    head.ready(function () {
        $("a[rel^='EPLPhoto']").prettyPhoto({
            theme: 'light_square',
            animation_speed: 'fast',
            overlay_gallery: false,
            changepicturecallback: function () { changeDescription(); }
        });

        $(".blogposts-modal").colorbox({
            width: "60%", height: "370px",
            href: '@Url.Action("AddBlogPost", "Events", new { id = Model.ID })',
            onComplete: function () { $("#BlogURL").focus(); }
        });
    });
</script>

@Html.Partial("_ExpiredEventModalScript", new ExpiredEventModalScriptViewModel { EventId = Model.ID, IsExpired = Model.IsExpired })