@using System.Diagnostics
@using Combres.Mvc
@using Epilogger.Web;
@model Epilogger.Web.Models.EditEventViewModel

@{
    Layout = "~/Views/Shared/_InteriorLayout.cshtml";
    ViewBag.Title = @Model.Name + " - Edit Event | Epilogger";
}

<!-- Confirm CSS files --> 
<link type='text/css' href="@Url.Content("/Public/js/confirm/css/confirm.css")" rel='stylesheet' media='screen' /> 


<script src="http://maps.googleapis.com/maps/api/js?key=AIzaSyACSiRC-8eEdPrS6qs9LLRb8m-EZ-GNhEo&sensor=false"></script>

@*@Html.CombresLink("CreateEventJs")*@
<script type="text/javascript">
    //head.js('@Url.Content("~/Public/js/jquery.blockUI.js")');
    head.js('@Url.Content("~/Public/js/EditEvent.js")');
    head.js('/Public/js/jTweet.js');
    head.js('/Public/js/tweetTemplate.js');
    
    
    var EventID = @Model.ID;
    var page = "Edit";

    
    if ('@Model.Venue'.length > 0) {
        @{
            var venueA = string.Empty;
            if (Model.Venue != null)
            {
                venueA = string.Format("{0}, {1}, {2}, {3}", Model.Venue.Address, Model.Venue.City, Model.Venue.State, Model.Venue.Zip);
            }
        }
        var venueAddress = '@venueA';
    } else {
        var venueAddress = '';
    }
   
</script>


@*New event menu*@
@Html.Partial("Menu", Model.ToolbarViewModel)
<div class="spacer"></div>


<div id="events-nav">
    <h1>EDIT EVENT INFO</h1>
    
    <ul id="left-nav">
        <li><a href="" id="menuBasic"><span class="editcheckOff"></span>BASIC INFORMATION</a></li>
        <li><a href="" id="menuHashtag"><span class="editcheckOff"></span>HASHTAG & KEYWORDS</a></li>
        <li><a href="" id="menuVenue"><span class="editcheckOff"></span>VENUE, LOCATION</a></li>
        <li><a href="" id="menuDesc"><span class="editcheckOff"></span>DESCRIPTION & CONTACT INFO</a></li>
        <li><a href="" id="menuTick"><span class="editcheckOff"></span>TICKETING</a></li>
    </ul>
    

    @*<input type="button" onclick="$('#EditForm').submit();" class="blue-action-button submitForm" value="Save" />
    @if (Model.CurrentUserID == Model.UserID || Model.CurrentUserRole == UserRoleType.Administrator)
    {
        <input type="button" class="red-action-button confirm" value="Delete Event" name="confirm" />
    }*@
    
    
    @if (Model.CurrentUserID == Model.UserID || Model.CurrentUserRole == UserRoleType.Administrator)
    {
    <input type="button" class="red-action-button confirm" value="Delete Event" name="confirm" />
        <div class="spacer"></div>
    }
    
    

    <h1>UPGRADE YOUR EVENT</h1>
    <p>Upgrade for $50! Get premium features designed to foster community engagement before, during, and after your event.</p>
    @if (Model.CurrentUserID == Model.UserID || Model.CurrentUserRole == UserRoleType.Administrator)
    {
        <a href="#" class="upgradeEventTrigger blue-action-button" onclick="return false;" value="@Model.ID">Upgrade Event</a>
    }
</div>





<div id="events-content">
    
    @Html.ValidationSummary("Please correct the following issues")
    @using (Html.BeginForm("edit", "events", FormMethod.Post, new { id = "EditForm" }))
    {
        @Html.HiddenFor(model => model.CurrentSection)
        <div id="editBasicInfoSection" class="editSection">
            <h1>BASIC INFORMATION</h1>
            <div class="spacer"></div>
            <div class="item-data clearfix">
                @if (Model.IsPaid)
                {
                    <p><label for="IsPrivate">Privacy:</label> @Html.CheckBoxFor(model => model.IsPrivate)<span class="icon-italic">(only you will be able to see this event)</span></p>
                }
                <p>@Html.LabelFor(model => model.Name) @Html.TextBoxFor(model => model.Name, new { @class = "wide padded" })</p>
                <p>@Html.LabelFor(model => model.Subtitle) @Html.TextBoxFor(model => model.Subtitle, new { @class = "wide padded" })</p>
                <div class="spacer"></div>

                <div class="timeRanges">
                    <p>
                        @Html.Label("Start date:") @Html.EditorFor(m => m.StartDateTime, "DateTimeOneline")
                                
                        @Html.DropDownList("start_times", new SelectList(Model.Times, "Value", "Text", string.Format("{0:h:mm}", Model.StartDateTime.ToLocalTime())), new { @class = "times" })
                        @Html.DropDownList("AMPMstartTime", new SelectList(new List<SelectListItem> {
                                                                                                        new SelectListItem
                                                                                                            {
                                                                                                                Text = "am",
                                                                                                                Value = "am"
                                                                                                            },
                                                                                                        new SelectListItem
                                                                                                            {
                                                                                                                Text = "pm",
                                                                                                                Value = "pm"
                                                                                                            }}, "Value", "Text", string.Format("{0:tt}", Model.StartDateTime.ToLocalTime()).ToLower()), new { @class = "AMPM" })
                        @*@Html.DropDownList("timeZone", new SelectList(Model.TimeZones, "TimeZoneOffset", "TimeZoneName", Model.TimeZoneOffset), new { @class = "timeZoneSelect" })*@
                        
                    </p>
                    

                    <div id="endDate" class="">
                        <p>
                            @Html.Label("End date:") @Html.EditorFor(m => m.EndDateTime, "DateTimeOneline")
                            @{
                Debug.Assert(Model.EndDateTime != null, "Model.EndDateTime != null");
                            }
                            @Html.DropDownList("end_times", new SelectList(Model.Times, "Value", "Text", string.Format("{0:h:mm}", ((DateTime)Model.EndDateTime).ToLocalTime())), new { @class = "times" })
                            @Html.DropDownList("AMPMendTime", new SelectList(new List<SelectListItem> {
                                                                                                          new SelectListItem
                                                                                                              {
                                                                                                                  Text = "am",
                                                                                                                  Value = "am"
                                                                                                              },
                                                                                                          new SelectListItem
                                                                                                              {
                                                                                                                  Text = "pm",
                                                                                                                  Value = "pm"
                                                                                                              }}, "Value", "Text", string.Format("{0:tt}", ((DateTime)Model.EndDateTime).ToLocalTime()).ToLower()),
                                               new { @class = "AMPM" })
                        </p>
                    </div>
                    <div class="spacer"></div>
                        
                    @Html.Label("Collect content:")
                    @Html.DropDownList("collectDataTimes", new SelectList(Model.CollectDataList, "Value", "Text", Model.CollectDataValue))

                </div>
                <div class="spacer"></div>
                <p><label></label><input type="button" onclick="$('#EditForm').submit();" class="blue-action-button submitForm" value="UPDATE" /></p>

            </div>
            

        </div>
            
        <div id="hashTagsSection" class="editSection">
            @*<input type="hidden" id = "IsAdvanceMode" value="False" />*@
            @Html.Hidden("IsAdvanceMode", "False")
            <h1>HASHTAG & KEYWORD</h1>
            <a href="" id="advance_link" onclick="advancedMode(); return false;">(Switch to advanced mode)</a>
            <span id="advancedOnlyMsg" style="display: none;">Do to the complexity of your search terms simple mode is no longer available.</span>
            <div class="spacer"></div>

            <div class="item-data clearfix">
                <p>
                    <label id="modeTitle">Official Hashtag:</label>@Html.TextBoxFor(model => model.SearchTerms, new { @id = "searchText", @class = "wide searchText" })
                </p>
                <div id="normal_mode">
                    <div id="addAnother1" class="invisible add_another">
                        <p><label>Other terms:</label>@Html.TextBoxFor(model => model.SearchTerms, new { @id = "searchText2", @Value = "", @class = "searchText" })
                        @*@Html.TextBox("searchText2", "", new { @class = "searchText" })*@</p>
                    </div>
                    <div id="addAnother2" class="invisible add_another">
                        <p><label></label>@Html.TextBoxFor(model => model.SearchTerms, new { @id = "searchText3", @Value = "", @class = "searchText" })</p>
                    </div>
                    <div id="addAnother3" class="invisible add_another">
                        <p><label></label>@Html.TextBoxFor(model => model.SearchTerms, new { @id = "searchText4", @Value = "", @class = "searchText" })</p>
                    </div>
                    <div id="addAnother4" class="invisible add_another">
                        <p><label></label>@Html.TextBoxFor(model => model.SearchTerms, new { @id = "searchText5", @Value = "", @class = "searchText" })</p>
                    </div>
                    <div id="addAnother5" class="invisible add_another">
                        <p><label></label>@Html.TextBoxFor(model => model.SearchTerms, new { @id = "searchText6", @Value = "", @class = "searchText" })</p>
                    </div>
                    <div id="button_input">
                        <p><label></label><input id="addAnotherTermBTN" type="button" value="add another" class="blue-action-button" />
                    </div>
                </div>
                
            </div>
              
            <div id="warningBox" class="warning">
                <input type="button" value="preview results" class="stn_button twittersearch_blue_button" id="searchButton" />
                <div class="clear_away">
                    <h3>Have you double-checked your keywords and hashtags yet?</h3>
                    <span>Nobody likes nudie pictures or tons of unrelated content!</span><br />
                </div>
            </div>

            <div id="preview_tweet_box" class="invisible">
                <div class="refreshBar"></div>
                <div id="tweetSubContainer">
                </div>
                <div id="tweetMainContainer">
                </div>
                @*<input id="getMoreTweetsButton" type="button" value="Get More Tweets" />*@
            </div>
            
            <div class="item-data clearfix">
                <div class="spacer"></div>
                <p><label></label><input type="button" onclick="$('#EditForm').submit();" class="blue-action-button submitForm" value="UPDATE" /></p>
                
            </div>
        </div>
        
        <div id="venueSection" class="editSection">
            <h1>VENUE, LOCATION</h1>
            
            <div id="map_canvas" style="height: 315px; width: 415px; float: right; border: 1px solid #cacaca;"></div>

            <div style="">
                <div id="selectedVenue">
                    @if (Model.Venue != null)
                    {
                        <strong>@Model.Venue.Name</strong><br />
                        @Model.Venue.Address<br />
                        @Model.Venue.City@:, @Model.Venue.State<br />
                        @Model.Venue.Zip<br />
                    }
                    else
                    {
                        <p>No venue selected</p>
                    }
                    
                    
                </div>
                <input type="button" id="foursquare-search" class="blue-action-button" value="CHANGE VENUE" />
            </div>
            
            <div class="item-data clearfix">
                <div class="spacer"></div>
                <div class="spacer"></div>
                <div class="spacer"></div>
                <div class="spacer"></div>
                <div class="spacer"></div>
                <div class="spacer"></div>
                <div class="spacer"></div>
                <div class="spacer"></div>
                <div class="spacer"></div>
                <div class="spacer"></div>
                <div class="spacer"></div>
                <p><label></label><input type="button" onclick="$('#EditForm').submit();" class="blue-action-button submitForm" value="UPDATE" /></p>
            </div>

            @Html.HiddenFor(model => model.FoursquareVenueID)
            @Html.HiddenFor(model => model.VenueID)
            @Html.HiddenFor(model => model.EventSlug)
            @Html.HiddenFor(model => model.CurrentUserRole)
            @Html.HiddenFor(model => model.CurrentUserID)
            @Html.HiddenFor(model => model.UserID)
            @Html.HiddenFor(model => model.ID)
            

        </div>
        
        
        <div id="descriptionSection" class="editSection">
            <h1>DESCRIPTION & CONTACT INFO</h1>
            <div class="item-data clearfix">
                
                <p>@Html.LabelFor(model => model.Description) @Html.TextAreaFor(model => model.Description, new { @class = "wide" })</p>
                
                <p>@Html.LabelFor(model => model.CategoryID) @Html.DropDownListFor(model => model.CategoryID, Model.Categories, "Select your event category", new { @class = "wide padded" })</p>

                <p>@Html.LabelFor(model => model.WebsiteURL) @Html.TextBoxFor(model => model.WebsiteURL, new { @class = "wide" })</p>
            
                <p>@Html.LabelFor(model => model.TwitterAccount) @Html.TextBoxFor(model => model.TwitterAccount, new { @class = "med" })</p>
                <p>@Html.LabelFor(model => model.FacebookPageURL) @Html.TextBoxFor(model => model.FacebookPageURL, new { @class = "med" })</p>
            
            
                <div class="spacer"></div>
                <p><label></label><input type="button" onclick="$('#EditForm').submit();" class="blue-action-button submitForm" value="UPDATE" /></p>
            </div>
        </div>
        
        
        
        
         <div id="ticketingSection" class="editSection">
            <h1>TICKETING</h1>
            <div class="item-data clearfix">
                <p>@Html.LabelFor(model => model.EventBrightUrl)  @Html.TextBoxFor(model => model.EventBrightUrl, new { @class = "wide" })</p>            
                <p>@Html.LabelFor(model => model.Cost) @Html.TextBoxFor(model => model.Cost, new { @class = "small" })</p>
            
                <div class="spacer"></div>
                <p><label></label><input type="button" onclick="$('#EditForm').submit();" class="blue-action-button submitForm" value="UPDATE" /></p>
            </div>
        </div>

               @* <input type="submit" class="blue-action-button fright" value="Save Event" />
                    if (Model.CurrentUserID == Model.UserID || Model.CurrentUserRole == UserRoleType.Administrator)
                    {
                <input type="button" class="red-action-button confirm" value="Delete Event" name="confirm" />
                    }*@
    
                <!-- modal content --> 
                <div id='confirm'> 
                    <div class='header'><span>Confirm</span></div> 
                    <div class='message'></div> 
                    <div class='buttons'> 
                        <div class='no simplemodal-close'>No</div><div class='yes'>Yes</div> 
                    </div> 
                </div> 
                <!-- preload the images --> 
                <div style='display:none'> 
                    <img src="@Url.Content("/Public/js/confirm/img/confirm/header.gif")" alt='' /> 
                    <img src="@Url.Content("/Public/js/confirm/img/confirm/button.gif")" alt='' /> 
                </div> 
    
    }
            </div>


<script language="javascript" type="text/javascript">
    head.ready(function () {
        $("#foursquare-search").colorbox({
            width: "60%", height: "62%",
            href: '@Url.Action("VenueSearch", "Events")',
            onComplete: function () { $("#VenueName").focus(); }
        });
    });
    head.js('@Url.Content("~/Public/js/confirm/js/jquery.simplemodal.js")');
    head.js('@Url.Content("~/Public/js/confirm/js/confirm.js")');
</script>