// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Epilogger.Web.Controllers {
    public partial class WidgetController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public WidgetController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected WidgetController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Index() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Index);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult PhotoDetails() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.PhotoDetails);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Photos() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Photos);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Tweets() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Tweets);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Checkins() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.Checkins);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult TwitterReply() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.TwitterReply);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult TwitterRetweet() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.TwitterRetweet);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public WidgetController Actions { get { return MVC.Widget; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Widget";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Widget";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string Index = "Index";
            public readonly string PhotoDetails = "PhotoDetails";
            public readonly string Photos = "Photos";
            public readonly string Tweets = "Tweets";
            public readonly string Checkins = "Checkins";
            public readonly string TwitterReply = "TwitterReply";
            public readonly string TwitterRetweet = "TwitterRetweet";
            public readonly string TwitterAuth = "TwitterAuth";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants {
            public const string Index = "Index";
            public const string PhotoDetails = "PhotoDetails";
            public const string Photos = "Photos";
            public const string Tweets = "Tweets";
            public const string Checkins = "Checkins";
            public const string TwitterReply = "TwitterReply";
            public const string TwitterRetweet = "TwitterRetweet";
            public const string TwitterAuth = "TwitterAuth";
        }


        static readonly ActionParamsClass_Index s_params_Index = new ActionParamsClass_Index();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Index IndexParams { get { return s_params_Index; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Index {
            public readonly string id = "id";
            public readonly string width = "width";
            public readonly string height = "height";
        }
        static readonly ActionParamsClass_PhotoDetails s_params_PhotoDetails = new ActionParamsClass_PhotoDetails();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_PhotoDetails PhotoDetailsParams { get { return s_params_PhotoDetails; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_PhotoDetails {
            public readonly string id = "id";
            public readonly string PhotoID = "PhotoID";
            public readonly string width = "width";
            public readonly string height = "height";
            public readonly string returnto = "returnto";
        }
        static readonly ActionParamsClass_Photos s_params_Photos = new ActionParamsClass_Photos();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Photos PhotosParams { get { return s_params_Photos; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Photos {
            public readonly string id = "id";
            public readonly string width = "width";
            public readonly string height = "height";
        }
        static readonly ActionParamsClass_Tweets s_params_Tweets = new ActionParamsClass_Tweets();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Tweets TweetsParams { get { return s_params_Tweets; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Tweets {
            public readonly string id = "id";
            public readonly string width = "width";
            public readonly string height = "height";
        }
        static readonly ActionParamsClass_Checkins s_params_Checkins = new ActionParamsClass_Checkins();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Checkins CheckinsParams { get { return s_params_Checkins; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Checkins {
            public readonly string id = "id";
            public readonly string width = "width";
            public readonly string height = "height";
        }
        static readonly ActionParamsClass_TwitterReply s_params_TwitterReply = new ActionParamsClass_TwitterReply();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_TwitterReply TwitterReplyParams { get { return s_params_TwitterReply; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_TwitterReply {
            public readonly string id = "id";
            public readonly string twitterid = "twitterid";
            public readonly string width = "width";
            public readonly string height = "height";
            public readonly string returnurl = "returnurl";
            public readonly string returnto = "returnto";
        }
        static readonly ActionParamsClass_TwitterRetweet s_params_TwitterRetweet = new ActionParamsClass_TwitterRetweet();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_TwitterRetweet TwitterRetweetParams { get { return s_params_TwitterRetweet; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_TwitterRetweet {
            public readonly string id = "id";
            public readonly string twitterid = "twitterid";
            public readonly string width = "width";
            public readonly string height = "height";
            public readonly string returnurl = "returnurl";
            public readonly string returnto = "returnto";
        }
        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
            public readonly string _EmbedLayout = "~/Views/Widget/_EmbedLayout.cshtml";
            public readonly string _EpiloggerCounts = "~/Views/Widget/_EpiloggerCounts.cshtml";
            public readonly string _header = "~/Views/Widget/_header.cshtml";
            public readonly string _widgetMenu = "~/Views/Widget/_widgetMenu.cshtml";
            public readonly string Checkins = "~/Views/Widget/Checkins.cshtml";
            public readonly string index = "~/Views/Widget/index.cshtml";
            public readonly string PhotoDetails = "~/Views/Widget/PhotoDetails.cshtml";
            public readonly string Photos = "~/Views/Widget/Photos.cshtml";
            public readonly string Tweets = "~/Views/Widget/Tweets.cshtml";
            public readonly string TwitterAuth = "~/Views/Widget/TwitterAuth.cshtml";
            public readonly string TwitterReply = "~/Views/Widget/TwitterReply.cshtml";
            public readonly string TwitterRetweet = "~/Views/Widget/TwitterRetweet.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_WidgetController: Epilogger.Web.Controllers.WidgetController {
        public T4MVC_WidgetController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult Index(string id, string width, string height) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Index);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("width", width);
            callInfo.RouteValueDictionary.Add("height", height);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult PhotoDetails(string id, int PhotoID, string width, string height, int returnto) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.PhotoDetails);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("PhotoID", PhotoID);
            callInfo.RouteValueDictionary.Add("width", width);
            callInfo.RouteValueDictionary.Add("height", height);
            callInfo.RouteValueDictionary.Add("returnto", returnto);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Photos(string id, string width, string height) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Photos);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("width", width);
            callInfo.RouteValueDictionary.Add("height", height);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Tweets(string id, string width, string height) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Tweets);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("width", width);
            callInfo.RouteValueDictionary.Add("height", height);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Checkins(string id, string width, string height) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Checkins);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("width", width);
            callInfo.RouteValueDictionary.Add("height", height);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult TwitterReply(string id, long twitterid, string width, string height, string returnurl, int returnto) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.TwitterReply);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("twitterid", twitterid);
            callInfo.RouteValueDictionary.Add("width", width);
            callInfo.RouteValueDictionary.Add("height", height);
            callInfo.RouteValueDictionary.Add("returnurl", returnurl);
            callInfo.RouteValueDictionary.Add("returnto", returnto);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult TwitterRetweet(string id, long twitterid, string width, string height, string returnurl, int returnto) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.TwitterRetweet);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("twitterid", twitterid);
            callInfo.RouteValueDictionary.Add("width", width);
            callInfo.RouteValueDictionary.Add("height", height);
            callInfo.RouteValueDictionary.Add("returnurl", returnurl);
            callInfo.RouteValueDictionary.Add("returnto", returnto);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult TwitterAuth() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.TwitterAuth);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591
