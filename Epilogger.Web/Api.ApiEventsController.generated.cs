// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Epilogger.Web.Areas.Api.Controllers {
    public partial class ApiEventsController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected ApiEventsController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult EventList() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.EventList);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult Event() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.Event);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ApiEventsController Actions { get { return MVC.Api.ApiEvents; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "Api";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "ApiEvents";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "ApiEvents";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string EventList = "EventList";
            public readonly string Event = "Event";
            public readonly string Categories = "Categories";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants {
            public const string EventList = "EventList";
            public const string Event = "Event";
            public const string Categories = "Categories";
        }


        static readonly ActionParamsClass_EventList s_params_EventList = new ActionParamsClass_EventList();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_EventList EventListParams { get { return s_params_EventList; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_EventList {
            public readonly string page = "page";
            public readonly string count = "count";
        }
        static readonly ActionParamsClass_Event s_params_Event = new ActionParamsClass_Event();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Event EventParams { get { return s_params_Event; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Event {
            public readonly string id = "id";
            public readonly string item = "item";
            public readonly string httpVerb = "httpVerb";
        }
        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_ApiEventsController: Epilogger.Web.Areas.Api.Controllers.ApiEventsController {
        public T4MVC_ApiEventsController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.JsonResult EventList(int? page, int? count) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.EventList);
            callInfo.RouteValueDictionary.Add("page", page);
            callInfo.RouteValueDictionary.Add("count", count);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult Event(int? id, Epilogger.Data.Event item, string httpVerb) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.Event);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("item", item);
            callInfo.RouteValueDictionary.Add("httpVerb", httpVerb);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult Categories() {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.Categories);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult EventList(System.Collections.Generic.List<Epilogger.Data.Event> items) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.EventList);
            callInfo.RouteValueDictionary.Add("items", items);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591
