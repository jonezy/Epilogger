// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Epilogger.Web.Areas.Api.Controllers {
    public partial class ApiEventsController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected ApiEventsController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult EventList() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.EventList);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult Event() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.Event);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult SearchEvents() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.SearchEvents);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult SearchInEvent() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.SearchInEvent);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult AllFeed() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.AllFeed);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult Tweets() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.Tweets);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult Top10Tweeters() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.Top10Tweeters);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult TweetsByImageID() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.TweetsByImageID);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult TweetCountByImageID() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.TweetCountByImageID);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult ImageCountByEventID() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.ImageCountByEventID);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult ImagesByEventIDOrderDescTakeX() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.ImagesByEventIDOrderDescTakeX);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult TopImagesByEventID() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.TopImagesByEventID);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult NewestPhotosByEventID() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.NewestPhotosByEventID);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult TopPhotosAndTweetByEventID() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.TopPhotosAndTweetByEventID);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult ImagesByEventPaged() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.ImagesByEventPaged);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult FindCheckInCountByEventID() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.FindCheckInCountByEventID);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult FindByEventIDPaged() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.FindByEventIDPaged);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult GetUserById() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.GetUserById);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult GetUserByUsername() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.GetUserByUsername);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult GetUserByEmail() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.GetUserByEmail);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult SaveUserFollowsEvent() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.SaveUserFollowsEvent);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult DeleteUserEventSubscription() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.DeleteUserEventSubscription);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult GetUserSubscribedAndCreatedEvents() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.GetUserSubscribedAndCreatedEvents);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult GetUserSubscribedEvents() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.GetUserSubscribedEvents);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult AuthEPLUser() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.AuthEPLUser);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult ConnectTwitterAccountToUser() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.ConnectTwitterAccountToUser);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult ConnectFacebookAccountToUser() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.ConnectFacebookAccountToUser);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult DisconnectFacebookAccount() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.DisconnectFacebookAccount);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult DisconnectTwitterAccount() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.DisconnectTwitterAccount);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult EventsByCategoryID() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.EventsByCategoryID);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult GetVenueByID() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.GetVenueByID);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult GetVenueByFoursquareVenueID() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.GetVenueByFoursquareVenueID);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult AddItemToMemBox() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.AddItemToMemBox);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult RemoveItemFromMemBox() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.RemoveItemFromMemBox);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult GetAllItemsInMemBoxPaged() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.GetAllItemsInMemBoxPaged);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult GetAllTweetsInMemBoxPaged() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.GetAllTweetsInMemBoxPaged);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult GetAllImagesInMemBoxPaged() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.GetAllImagesInMemBoxPaged);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult GetAllMemoryBoxesByUserId() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.GetAllMemoryBoxesByUserId);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult GetAllMemoryBoxesByUserIdandEventId() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.GetAllMemoryBoxesByUserIdandEventId);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.JsonResult ShortenUrlEPL() {
            return new T4MVC_JsonResult(Area, Name, ActionNames.ShortenUrlEPL);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ApiEventsController Actions { get { return MVC.Api.ApiEvents; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "Api";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "ApiEvents";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "ApiEvents";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string EventList = "EventList";
            public readonly string Event = "Event";
            public readonly string TrendingEvents = "TrendingEvents";
            public readonly string SearchEvents = "SearchEvents";
            public readonly string FeaturedEvents = "FeaturedEvents";
            public readonly string SearchInEvent = "SearchInEvent";
            public readonly string AllFeed = "AllFeed";
            public readonly string Tweets = "Tweets";
            public readonly string Top10Tweeters = "Top10Tweeters";
            public readonly string TweetsByImageID = "TweetsByImageID";
            public readonly string TweetCountByImageID = "TweetCountByImageID";
            public readonly string ImageCountByEventID = "ImageCountByEventID";
            public readonly string ImagesByEventIDOrderDescTakeX = "ImagesByEventIDOrderDescTakeX";
            public readonly string TopImagesByEventID = "TopImagesByEventID";
            public readonly string NewestPhotosByEventID = "NewestPhotosByEventID";
            public readonly string TopPhotosAndTweetByEventID = "TopPhotosAndTweetByEventID";
            public readonly string ImagesByEventPaged = "ImagesByEventPaged";
            public readonly string FindCheckInCountByEventID = "FindCheckInCountByEventID";
            public readonly string FindByEventIDPaged = "FindByEventIDPaged";
            public readonly string GetUserById = "GetUserById";
            public readonly string GetUserByUsername = "GetUserByUsername";
            public readonly string GetUserByEmail = "GetUserByEmail";
            public readonly string SaveUserFollowsEvent = "SaveUserFollowsEvent";
            public readonly string DeleteUserEventSubscription = "DeleteUserEventSubscription";
            public readonly string GetUserSubscribedAndCreatedEvents = "GetUserSubscribedAndCreatedEvents";
            public readonly string GetUserSubscribedEvents = "GetUserSubscribedEvents";
            public readonly string AuthEPLUser = "AuthEPLUser";
            public readonly string ConnectTwitterAccountToUser = "ConnectTwitterAccountToUser";
            public readonly string ConnectFacebookAccountToUser = "ConnectFacebookAccountToUser";
            public readonly string DisconnectFacebookAccount = "DisconnectFacebookAccount";
            public readonly string DisconnectTwitterAccount = "DisconnectTwitterAccount";
            public readonly string Categories = "Categories";
            public readonly string EventsByCategoryID = "EventsByCategoryID";
            public readonly string GetVenueByID = "GetVenueByID";
            public readonly string GetVenueByFoursquareVenueID = "GetVenueByFoursquareVenueID";
            public readonly string AddItemToMemBox = "AddItemToMemBox";
            public readonly string RemoveItemFromMemBox = "RemoveItemFromMemBox";
            public readonly string GetAllItemsInMemBoxPaged = "GetAllItemsInMemBoxPaged";
            public readonly string GetAllTweetsInMemBoxPaged = "GetAllTweetsInMemBoxPaged";
            public readonly string GetAllImagesInMemBoxPaged = "GetAllImagesInMemBoxPaged";
            public readonly string GetAllMemoryBoxesByUserId = "GetAllMemoryBoxesByUserId";
            public readonly string GetAllMemoryBoxesByUserIdandEventId = "GetAllMemoryBoxesByUserIdandEventId";
            public readonly string GeckoGetUserGrowthDayOverDay = "GeckoGetUserGrowthDayOverDay";
            public readonly string GeckoGetUserGrowthLastWeek = "GeckoGetUserGrowthLastWeek";
            public readonly string GeckoGetUserGrowthLastMonth = "GeckoGetUserGrowthLastMonth";
            public readonly string GeckoGetDailyUserGrowthLastMonth = "GeckoGetDailyUserGrowthLastMonth";
            public readonly string GeckoEventCount = "GeckoEventCount";
            public readonly string GeckoActiveEventCount = "GeckoActiveEventCount";
            public readonly string GeckoCollectingEventCount = "GeckoCollectingEventCount";
            public readonly string GeckoEventCountRAG = "GeckoEventCountRAG";
            public readonly string GeckoGetEventGrowthDayOverDay = "GeckoGetEventGrowthDayOverDay";
            public readonly string GeckoGetEventGrowthLastWeek = "GeckoGetEventGrowthLastWeek";
            public readonly string GeckoGetEventGrowthLastMonth = "GeckoGetEventGrowthLastMonth";
            public readonly string GeckoDailyUniqueActiveUsers = "GeckoDailyUniqueActiveUsers";
            public readonly string GeckoMonthlyActiveUsers = "GeckoMonthlyActiveUsers";
            public readonly string GeckoTweetCount = "GeckoTweetCount";
            public readonly string GeckoPhotoCount = "GeckoPhotoCount";
            public readonly string GeckoEpiloggerWebsiteStatus = "GeckoEpiloggerWebsiteStatus";
            public readonly string GeckoEpiloggerServiceStatus = "GeckoEpiloggerServiceStatus";
            public readonly string GeckoNumberOfTweetsInTheLastHour = "GeckoNumberOfTweetsInTheLastHour";
            public readonly string GeckoGetTweetGrowthLast24Hours = "GeckoGetTweetGrowthLast24Hours";
            public readonly string GeckoTopEventByUserActivity = "GeckoTopEventByUserActivity";
            public readonly string ShortenUrlEPL = "ShortenUrlEPL";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants {
            public const string EventList = "EventList";
            public const string Event = "Event";
            public const string TrendingEvents = "TrendingEvents";
            public const string SearchEvents = "SearchEvents";
            public const string FeaturedEvents = "FeaturedEvents";
            public const string SearchInEvent = "SearchInEvent";
            public const string AllFeed = "AllFeed";
            public const string Tweets = "Tweets";
            public const string Top10Tweeters = "Top10Tweeters";
            public const string TweetsByImageID = "TweetsByImageID";
            public const string TweetCountByImageID = "TweetCountByImageID";
            public const string ImageCountByEventID = "ImageCountByEventID";
            public const string ImagesByEventIDOrderDescTakeX = "ImagesByEventIDOrderDescTakeX";
            public const string TopImagesByEventID = "TopImagesByEventID";
            public const string NewestPhotosByEventID = "NewestPhotosByEventID";
            public const string TopPhotosAndTweetByEventID = "TopPhotosAndTweetByEventID";
            public const string ImagesByEventPaged = "ImagesByEventPaged";
            public const string FindCheckInCountByEventID = "FindCheckInCountByEventID";
            public const string FindByEventIDPaged = "FindByEventIDPaged";
            public const string GetUserById = "GetUserById";
            public const string GetUserByUsername = "GetUserByUsername";
            public const string GetUserByEmail = "GetUserByEmail";
            public const string SaveUserFollowsEvent = "SaveUserFollowsEvent";
            public const string DeleteUserEventSubscription = "DeleteUserEventSubscription";
            public const string GetUserSubscribedAndCreatedEvents = "GetUserSubscribedAndCreatedEvents";
            public const string GetUserSubscribedEvents = "GetUserSubscribedEvents";
            public const string AuthEPLUser = "AuthEPLUser";
            public const string ConnectTwitterAccountToUser = "ConnectTwitterAccountToUser";
            public const string ConnectFacebookAccountToUser = "ConnectFacebookAccountToUser";
            public const string DisconnectFacebookAccount = "DisconnectFacebookAccount";
            public const string DisconnectTwitterAccount = "DisconnectTwitterAccount";
            public const string Categories = "Categories";
            public const string EventsByCategoryID = "EventsByCategoryID";
            public const string GetVenueByID = "GetVenueByID";
            public const string GetVenueByFoursquareVenueID = "GetVenueByFoursquareVenueID";
            public const string AddItemToMemBox = "AddItemToMemBox";
            public const string RemoveItemFromMemBox = "RemoveItemFromMemBox";
            public const string GetAllItemsInMemBoxPaged = "GetAllItemsInMemBoxPaged";
            public const string GetAllTweetsInMemBoxPaged = "GetAllTweetsInMemBoxPaged";
            public const string GetAllImagesInMemBoxPaged = "GetAllImagesInMemBoxPaged";
            public const string GetAllMemoryBoxesByUserId = "GetAllMemoryBoxesByUserId";
            public const string GetAllMemoryBoxesByUserIdandEventId = "GetAllMemoryBoxesByUserIdandEventId";
            public const string GeckoGetUserGrowthDayOverDay = "GeckoGetUserGrowthDayOverDay";
            public const string GeckoGetUserGrowthLastWeek = "GeckoGetUserGrowthLastWeek";
            public const string GeckoGetUserGrowthLastMonth = "GeckoGetUserGrowthLastMonth";
            public const string GeckoGetDailyUserGrowthLastMonth = "GeckoGetDailyUserGrowthLastMonth";
            public const string GeckoEventCount = "GeckoEventCount";
            public const string GeckoActiveEventCount = "GeckoActiveEventCount";
            public const string GeckoCollectingEventCount = "GeckoCollectingEventCount";
            public const string GeckoEventCountRAG = "GeckoEventCountRAG";
            public const string GeckoGetEventGrowthDayOverDay = "GeckoGetEventGrowthDayOverDay";
            public const string GeckoGetEventGrowthLastWeek = "GeckoGetEventGrowthLastWeek";
            public const string GeckoGetEventGrowthLastMonth = "GeckoGetEventGrowthLastMonth";
            public const string GeckoDailyUniqueActiveUsers = "GeckoDailyUniqueActiveUsers";
            public const string GeckoMonthlyActiveUsers = "GeckoMonthlyActiveUsers";
            public const string GeckoTweetCount = "GeckoTweetCount";
            public const string GeckoPhotoCount = "GeckoPhotoCount";
            public const string GeckoEpiloggerWebsiteStatus = "GeckoEpiloggerWebsiteStatus";
            public const string GeckoEpiloggerServiceStatus = "GeckoEpiloggerServiceStatus";
            public const string GeckoNumberOfTweetsInTheLastHour = "GeckoNumberOfTweetsInTheLastHour";
            public const string GeckoGetTweetGrowthLast24Hours = "GeckoGetTweetGrowthLast24Hours";
            public const string GeckoTopEventByUserActivity = "GeckoTopEventByUserActivity";
            public const string ShortenUrlEPL = "ShortenUrlEPL";
        }


        static readonly ActionParamsClass_EventList s_params_EventList = new ActionParamsClass_EventList();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_EventList EventListParams { get { return s_params_EventList; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_EventList {
            public readonly string page = "page";
            public readonly string count = "count";
        }
        static readonly ActionParamsClass_Event s_params_Event = new ActionParamsClass_Event();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Event EventParams { get { return s_params_Event; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Event {
            public readonly string id = "id";
            public readonly string item = "item";
            public readonly string httpVerb = "httpVerb";
        }
        static readonly ActionParamsClass_SearchEvents s_params_SearchEvents = new ActionParamsClass_SearchEvents();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SearchEvents SearchEventsParams { get { return s_params_SearchEvents; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SearchEvents {
            public readonly string searchTerm = "searchTerm";
        }
        static readonly ActionParamsClass_SearchInEvent s_params_SearchInEvent = new ActionParamsClass_SearchInEvent();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SearchInEvent SearchInEventParams { get { return s_params_SearchInEvent; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SearchInEvent {
            public readonly string eventId = "eventId";
            public readonly string searchTerm = "searchTerm";
        }
        static readonly ActionParamsClass_AllFeed s_params_AllFeed = new ActionParamsClass_AllFeed();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AllFeed AllFeedParams { get { return s_params_AllFeed; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AllFeed {
            public readonly string eventId = "eventId";
            public readonly string page = "page";
            public readonly string count = "count";
        }
        static readonly ActionParamsClass_Tweets s_params_Tweets = new ActionParamsClass_Tweets();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Tweets TweetsParams { get { return s_params_Tweets; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Tweets {
            public readonly string eventId = "eventId";
            public readonly string page = "page";
            public readonly string count = "count";
        }
        static readonly ActionParamsClass_Top10Tweeters s_params_Top10Tweeters = new ActionParamsClass_Top10Tweeters();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Top10Tweeters Top10TweetersParams { get { return s_params_Top10Tweeters; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Top10Tweeters {
            public readonly string eventId = "eventId";
        }
        static readonly ActionParamsClass_TweetsByImageID s_params_TweetsByImageID = new ActionParamsClass_TweetsByImageID();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_TweetsByImageID TweetsByImageIDParams { get { return s_params_TweetsByImageID; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_TweetsByImageID {
            public readonly string imageId = "imageId";
            public readonly string eventId = "eventId";
            public readonly string page = "page";
            public readonly string count = "count";
        }
        static readonly ActionParamsClass_TweetCountByImageID s_params_TweetCountByImageID = new ActionParamsClass_TweetCountByImageID();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_TweetCountByImageID TweetCountByImageIDParams { get { return s_params_TweetCountByImageID; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_TweetCountByImageID {
            public readonly string imageId = "imageId";
            public readonly string eventId = "eventId";
        }
        static readonly ActionParamsClass_ImageCountByEventID s_params_ImageCountByEventID = new ActionParamsClass_ImageCountByEventID();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ImageCountByEventID ImageCountByEventIDParams { get { return s_params_ImageCountByEventID; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ImageCountByEventID {
            public readonly string eventId = "eventId";
        }
        static readonly ActionParamsClass_ImagesByEventIDOrderDescTakeX s_params_ImagesByEventIDOrderDescTakeX = new ActionParamsClass_ImagesByEventIDOrderDescTakeX();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ImagesByEventIDOrderDescTakeX ImagesByEventIDOrderDescTakeXParams { get { return s_params_ImagesByEventIDOrderDescTakeX; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ImagesByEventIDOrderDescTakeX {
            public readonly string eventID = "eventID";
            public readonly string numberToReturn = "numberToReturn";
        }
        static readonly ActionParamsClass_TopImagesByEventID s_params_TopImagesByEventID = new ActionParamsClass_TopImagesByEventID();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_TopImagesByEventID TopImagesByEventIDParams { get { return s_params_TopImagesByEventID; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_TopImagesByEventID {
            public readonly string eventID = "eventID";
            public readonly string numberToReturn = "numberToReturn";
        }
        static readonly ActionParamsClass_NewestPhotosByEventID s_params_NewestPhotosByEventID = new ActionParamsClass_NewestPhotosByEventID();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_NewestPhotosByEventID NewestPhotosByEventIDParams { get { return s_params_NewestPhotosByEventID; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_NewestPhotosByEventID {
            public readonly string eventID = "eventID";
            public readonly string numberToReturn = "numberToReturn";
        }
        static readonly ActionParamsClass_TopPhotosAndTweetByEventID s_params_TopPhotosAndTweetByEventID = new ActionParamsClass_TopPhotosAndTweetByEventID();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_TopPhotosAndTweetByEventID TopPhotosAndTweetByEventIDParams { get { return s_params_TopPhotosAndTweetByEventID; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_TopPhotosAndTweetByEventID {
            public readonly string eventID = "eventID";
            public readonly string numberToReturn = "numberToReturn";
        }
        static readonly ActionParamsClass_ImagesByEventPaged s_params_ImagesByEventPaged = new ActionParamsClass_ImagesByEventPaged();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ImagesByEventPaged ImagesByEventPagedParams { get { return s_params_ImagesByEventPaged; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ImagesByEventPaged {
            public readonly string eventID = "eventID";
            public readonly string page = "page";
            public readonly string count = "count";
        }
        static readonly ActionParamsClass_FindCheckInCountByEventID s_params_FindCheckInCountByEventID = new ActionParamsClass_FindCheckInCountByEventID();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_FindCheckInCountByEventID FindCheckInCountByEventIDParams { get { return s_params_FindCheckInCountByEventID; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_FindCheckInCountByEventID {
            public readonly string eventID = "eventID";
        }
        static readonly ActionParamsClass_FindByEventIDPaged s_params_FindByEventIDPaged = new ActionParamsClass_FindByEventIDPaged();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_FindByEventIDPaged FindByEventIDPagedParams { get { return s_params_FindByEventIDPaged; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_FindByEventIDPaged {
            public readonly string eventID = "eventID";
            public readonly string page = "page";
            public readonly string count = "count";
        }
        static readonly ActionParamsClass_GetUserById s_params_GetUserById = new ActionParamsClass_GetUserById();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetUserById GetUserByIdParams { get { return s_params_GetUserById; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetUserById {
            public readonly string userId = "userId";
        }
        static readonly ActionParamsClass_GetUserByUsername s_params_GetUserByUsername = new ActionParamsClass_GetUserByUsername();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetUserByUsername GetUserByUsernameParams { get { return s_params_GetUserByUsername; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetUserByUsername {
            public readonly string userName = "userName";
        }
        static readonly ActionParamsClass_GetUserByEmail s_params_GetUserByEmail = new ActionParamsClass_GetUserByEmail();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetUserByEmail GetUserByEmailParams { get { return s_params_GetUserByEmail; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetUserByEmail {
            public readonly string email = "email";
        }
        static readonly ActionParamsClass_SaveUserFollowsEvent s_params_SaveUserFollowsEvent = new ActionParamsClass_SaveUserFollowsEvent();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SaveUserFollowsEvent SaveUserFollowsEventParams { get { return s_params_SaveUserFollowsEvent; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SaveUserFollowsEvent {
            public readonly string ufe = "ufe";
        }
        static readonly ActionParamsClass_DeleteUserEventSubscription s_params_DeleteUserEventSubscription = new ActionParamsClass_DeleteUserEventSubscription();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteUserEventSubscription DeleteUserEventSubscriptionParams { get { return s_params_DeleteUserEventSubscription; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteUserEventSubscription {
            public readonly string userId = "userId";
            public readonly string eventId = "eventId";
        }
        static readonly ActionParamsClass_GetUserSubscribedAndCreatedEvents s_params_GetUserSubscribedAndCreatedEvents = new ActionParamsClass_GetUserSubscribedAndCreatedEvents();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetUserSubscribedAndCreatedEvents GetUserSubscribedAndCreatedEventsParams { get { return s_params_GetUserSubscribedAndCreatedEvents; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetUserSubscribedAndCreatedEvents {
            public readonly string userId = "userId";
            public readonly string page = "page";
            public readonly string count = "count";
        }
        static readonly ActionParamsClass_GetUserSubscribedEvents s_params_GetUserSubscribedEvents = new ActionParamsClass_GetUserSubscribedEvents();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetUserSubscribedEvents GetUserSubscribedEventsParams { get { return s_params_GetUserSubscribedEvents; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetUserSubscribedEvents {
            public readonly string userId = "userId";
            public readonly string page = "page";
            public readonly string count = "count";
        }
        static readonly ActionParamsClass_AuthEPLUser s_params_AuthEPLUser = new ActionParamsClass_AuthEPLUser();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AuthEPLUser AuthEPLUserParams { get { return s_params_AuthEPLUser; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AuthEPLUser {
            public readonly string headers = "headers";
        }
        static readonly ActionParamsClass_ConnectTwitterAccountToUser s_params_ConnectTwitterAccountToUser = new ActionParamsClass_ConnectTwitterAccountToUser();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ConnectTwitterAccountToUser ConnectTwitterAccountToUserParams { get { return s_params_ConnectTwitterAccountToUser; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ConnectTwitterAccountToUser {
            public readonly string caa = "caa";
        }
        static readonly ActionParamsClass_ConnectFacebookAccountToUser s_params_ConnectFacebookAccountToUser = new ActionParamsClass_ConnectFacebookAccountToUser();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ConnectFacebookAccountToUser ConnectFacebookAccountToUserParams { get { return s_params_ConnectFacebookAccountToUser; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ConnectFacebookAccountToUser {
            public readonly string caa = "caa";
        }
        static readonly ActionParamsClass_DisconnectFacebookAccount s_params_DisconnectFacebookAccount = new ActionParamsClass_DisconnectFacebookAccount();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DisconnectFacebookAccount DisconnectFacebookAccountParams { get { return s_params_DisconnectFacebookAccount; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DisconnectFacebookAccount {
            public readonly string userId = "userId";
        }
        static readonly ActionParamsClass_DisconnectTwitterAccount s_params_DisconnectTwitterAccount = new ActionParamsClass_DisconnectTwitterAccount();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DisconnectTwitterAccount DisconnectTwitterAccountParams { get { return s_params_DisconnectTwitterAccount; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DisconnectTwitterAccount {
            public readonly string userId = "userId";
        }
        static readonly ActionParamsClass_EventsByCategoryID s_params_EventsByCategoryID = new ActionParamsClass_EventsByCategoryID();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_EventsByCategoryID EventsByCategoryIDParams { get { return s_params_EventsByCategoryID; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_EventsByCategoryID {
            public readonly string categoryId = "categoryId";
            public readonly string page = "page";
            public readonly string count = "count";
        }
        static readonly ActionParamsClass_GetVenueByID s_params_GetVenueByID = new ActionParamsClass_GetVenueByID();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetVenueByID GetVenueByIDParams { get { return s_params_GetVenueByID; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetVenueByID {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_GetVenueByFoursquareVenueID s_params_GetVenueByFoursquareVenueID = new ActionParamsClass_GetVenueByFoursquareVenueID();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetVenueByFoursquareVenueID GetVenueByFoursquareVenueIDParams { get { return s_params_GetVenueByFoursquareVenueID; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetVenueByFoursquareVenueID {
            public readonly string foursquareVenueId = "foursquareVenueId";
        }
        static readonly ActionParamsClass_AddItemToMemBox s_params_AddItemToMemBox = new ActionParamsClass_AddItemToMemBox();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddItemToMemBox AddItemToMemBoxParams { get { return s_params_AddItemToMemBox; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddItemToMemBox {
            public readonly string memBoxItem = "memBoxItem";
        }
        static readonly ActionParamsClass_RemoveItemFromMemBox s_params_RemoveItemFromMemBox = new ActionParamsClass_RemoveItemFromMemBox();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RemoveItemFromMemBox RemoveItemFromMemBoxParams { get { return s_params_RemoveItemFromMemBox; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RemoveItemFromMemBox {
            public readonly string memBoxItemId = "memBoxItemId";
        }
        static readonly ActionParamsClass_GetAllItemsInMemBoxPaged s_params_GetAllItemsInMemBoxPaged = new ActionParamsClass_GetAllItemsInMemBoxPaged();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetAllItemsInMemBoxPaged GetAllItemsInMemBoxPagedParams { get { return s_params_GetAllItemsInMemBoxPaged; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetAllItemsInMemBoxPaged {
            public readonly string memBoxId = "memBoxId";
            public readonly string page = "page";
            public readonly string count = "count";
        }
        static readonly ActionParamsClass_GetAllTweetsInMemBoxPaged s_params_GetAllTweetsInMemBoxPaged = new ActionParamsClass_GetAllTweetsInMemBoxPaged();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetAllTweetsInMemBoxPaged GetAllTweetsInMemBoxPagedParams { get { return s_params_GetAllTweetsInMemBoxPaged; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetAllTweetsInMemBoxPaged {
            public readonly string memBoxId = "memBoxId";
            public readonly string page = "page";
            public readonly string count = "count";
        }
        static readonly ActionParamsClass_GetAllImagesInMemBoxPaged s_params_GetAllImagesInMemBoxPaged = new ActionParamsClass_GetAllImagesInMemBoxPaged();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetAllImagesInMemBoxPaged GetAllImagesInMemBoxPagedParams { get { return s_params_GetAllImagesInMemBoxPaged; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetAllImagesInMemBoxPaged {
            public readonly string memBoxId = "memBoxId";
            public readonly string page = "page";
            public readonly string count = "count";
        }
        static readonly ActionParamsClass_GetAllMemoryBoxesByUserId s_params_GetAllMemoryBoxesByUserId = new ActionParamsClass_GetAllMemoryBoxesByUserId();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetAllMemoryBoxesByUserId GetAllMemoryBoxesByUserIdParams { get { return s_params_GetAllMemoryBoxesByUserId; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetAllMemoryBoxesByUserId {
            public readonly string userId = "userId";
        }
        static readonly ActionParamsClass_GetAllMemoryBoxesByUserIdandEventId s_params_GetAllMemoryBoxesByUserIdandEventId = new ActionParamsClass_GetAllMemoryBoxesByUserIdandEventId();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetAllMemoryBoxesByUserIdandEventId GetAllMemoryBoxesByUserIdandEventIdParams { get { return s_params_GetAllMemoryBoxesByUserIdandEventId; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetAllMemoryBoxesByUserIdandEventId {
            public readonly string userId = "userId";
            public readonly string eventId = "eventId";
        }
        static readonly ActionParamsClass_ShortenUrlEPL s_params_ShortenUrlEPL = new ActionParamsClass_ShortenUrlEPL();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ShortenUrlEPL ShortenUrlEPLParams { get { return s_params_ShortenUrlEPL; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ShortenUrlEPL {
            public readonly string url = "url";
        }
        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_ApiEventsController: Epilogger.Web.Areas.Api.Controllers.ApiEventsController {
        public T4MVC_ApiEventsController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.JsonResult EventList(int? page, int? count) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.EventList);
            callInfo.RouteValueDictionary.Add("page", page);
            callInfo.RouteValueDictionary.Add("count", count);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult Event(int? id, Epilogger.Data.Event item, string httpVerb) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.Event);
            callInfo.RouteValueDictionary.Add("id", id);
            callInfo.RouteValueDictionary.Add("item", item);
            callInfo.RouteValueDictionary.Add("httpVerb", httpVerb);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult TrendingEvents() {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.TrendingEvents);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult SearchEvents(string searchTerm) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.SearchEvents);
            callInfo.RouteValueDictionary.Add("searchTerm", searchTerm);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult FeaturedEvents() {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.FeaturedEvents);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult SearchInEvent(int eventId, string searchTerm) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.SearchInEvent);
            callInfo.RouteValueDictionary.Add("eventId", eventId);
            callInfo.RouteValueDictionary.Add("searchTerm", searchTerm);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult AllFeed(int eventId, int page, int count) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.AllFeed);
            callInfo.RouteValueDictionary.Add("eventId", eventId);
            callInfo.RouteValueDictionary.Add("page", page);
            callInfo.RouteValueDictionary.Add("count", count);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult Tweets(int eventId, int page, int count) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.Tweets);
            callInfo.RouteValueDictionary.Add("eventId", eventId);
            callInfo.RouteValueDictionary.Add("page", page);
            callInfo.RouteValueDictionary.Add("count", count);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult Top10Tweeters(int eventId) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.Top10Tweeters);
            callInfo.RouteValueDictionary.Add("eventId", eventId);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult TweetsByImageID(int imageId, int eventId, int page, int count) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.TweetsByImageID);
            callInfo.RouteValueDictionary.Add("imageId", imageId);
            callInfo.RouteValueDictionary.Add("eventId", eventId);
            callInfo.RouteValueDictionary.Add("page", page);
            callInfo.RouteValueDictionary.Add("count", count);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult TweetCountByImageID(int imageId, int eventId) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.TweetCountByImageID);
            callInfo.RouteValueDictionary.Add("imageId", imageId);
            callInfo.RouteValueDictionary.Add("eventId", eventId);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult ImageCountByEventID(int eventId) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.ImageCountByEventID);
            callInfo.RouteValueDictionary.Add("eventId", eventId);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult ImagesByEventIDOrderDescTakeX(int eventID, int numberToReturn) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.ImagesByEventIDOrderDescTakeX);
            callInfo.RouteValueDictionary.Add("eventID", eventID);
            callInfo.RouteValueDictionary.Add("numberToReturn", numberToReturn);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult TopImagesByEventID(int eventID, int numberToReturn) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.TopImagesByEventID);
            callInfo.RouteValueDictionary.Add("eventID", eventID);
            callInfo.RouteValueDictionary.Add("numberToReturn", numberToReturn);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult NewestPhotosByEventID(int eventID, int numberToReturn) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.NewestPhotosByEventID);
            callInfo.RouteValueDictionary.Add("eventID", eventID);
            callInfo.RouteValueDictionary.Add("numberToReturn", numberToReturn);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult TopPhotosAndTweetByEventID(int eventID, int numberToReturn) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.TopPhotosAndTweetByEventID);
            callInfo.RouteValueDictionary.Add("eventID", eventID);
            callInfo.RouteValueDictionary.Add("numberToReturn", numberToReturn);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult ImagesByEventPaged(int eventID, int page, int count) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.ImagesByEventPaged);
            callInfo.RouteValueDictionary.Add("eventID", eventID);
            callInfo.RouteValueDictionary.Add("page", page);
            callInfo.RouteValueDictionary.Add("count", count);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult FindCheckInCountByEventID(int eventID) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.FindCheckInCountByEventID);
            callInfo.RouteValueDictionary.Add("eventID", eventID);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult FindByEventIDPaged(int eventID, int page, int count) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.FindByEventIDPaged);
            callInfo.RouteValueDictionary.Add("eventID", eventID);
            callInfo.RouteValueDictionary.Add("page", page);
            callInfo.RouteValueDictionary.Add("count", count);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult GetUserById(System.Guid userId) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.GetUserById);
            callInfo.RouteValueDictionary.Add("userId", userId);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult GetUserByUsername(string userName) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.GetUserByUsername);
            callInfo.RouteValueDictionary.Add("userName", userName);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult GetUserByEmail(string email) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.GetUserByEmail);
            callInfo.RouteValueDictionary.Add("email", email);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult SaveUserFollowsEvent(Epilogger.Web.Areas.Api.Models.Classes.ApiUserFollowsEvent ufe) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.SaveUserFollowsEvent);
            callInfo.RouteValueDictionary.Add("ufe", ufe);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult DeleteUserEventSubscription(System.Guid userId, int eventId) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.DeleteUserEventSubscription);
            callInfo.RouteValueDictionary.Add("userId", userId);
            callInfo.RouteValueDictionary.Add("eventId", eventId);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult GetUserSubscribedAndCreatedEvents(System.Guid userId, int page, int count) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.GetUserSubscribedAndCreatedEvents);
            callInfo.RouteValueDictionary.Add("userId", userId);
            callInfo.RouteValueDictionary.Add("page", page);
            callInfo.RouteValueDictionary.Add("count", count);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult GetUserSubscribedEvents(System.Guid userId, int page, int count) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.GetUserSubscribedEvents);
            callInfo.RouteValueDictionary.Add("userId", userId);
            callInfo.RouteValueDictionary.Add("page", page);
            callInfo.RouteValueDictionary.Add("count", count);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult AuthEPLUser(System.Collections.Specialized.NameValueCollection headers) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.AuthEPLUser);
            callInfo.RouteValueDictionary.Add("headers", headers);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult ConnectTwitterAccountToUser(Epilogger.Web.Areas.Api.Models.ApiConnectAuthAccount caa) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.ConnectTwitterAccountToUser);
            callInfo.RouteValueDictionary.Add("caa", caa);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult ConnectFacebookAccountToUser(Epilogger.Web.Areas.Api.Models.ApiConnectAuthAccount caa) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.ConnectFacebookAccountToUser);
            callInfo.RouteValueDictionary.Add("caa", caa);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult DisconnectFacebookAccount(System.Guid userId) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.DisconnectFacebookAccount);
            callInfo.RouteValueDictionary.Add("userId", userId);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult DisconnectTwitterAccount(System.Guid userId) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.DisconnectTwitterAccount);
            callInfo.RouteValueDictionary.Add("userId", userId);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult Categories() {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.Categories);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult EventsByCategoryID(int categoryId, int page, int count) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.EventsByCategoryID);
            callInfo.RouteValueDictionary.Add("categoryId", categoryId);
            callInfo.RouteValueDictionary.Add("page", page);
            callInfo.RouteValueDictionary.Add("count", count);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult GetVenueByID(int id) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.GetVenueByID);
            callInfo.RouteValueDictionary.Add("id", id);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult GetVenueByFoursquareVenueID(string foursquareVenueId) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.GetVenueByFoursquareVenueID);
            callInfo.RouteValueDictionary.Add("foursquareVenueId", foursquareVenueId);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult AddItemToMemBox(Epilogger.Web.Areas.Api.Models.Classes.ApiMemoryBoxItem memBoxItem) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.AddItemToMemBox);
            callInfo.RouteValueDictionary.Add("memBoxItem", memBoxItem);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult RemoveItemFromMemBox(int memBoxItemId) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.RemoveItemFromMemBox);
            callInfo.RouteValueDictionary.Add("memBoxItemId", memBoxItemId);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult GetAllItemsInMemBoxPaged(int memBoxId, int page, int count) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.GetAllItemsInMemBoxPaged);
            callInfo.RouteValueDictionary.Add("memBoxId", memBoxId);
            callInfo.RouteValueDictionary.Add("page", page);
            callInfo.RouteValueDictionary.Add("count", count);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult GetAllTweetsInMemBoxPaged(int memBoxId, int page, int count) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.GetAllTweetsInMemBoxPaged);
            callInfo.RouteValueDictionary.Add("memBoxId", memBoxId);
            callInfo.RouteValueDictionary.Add("page", page);
            callInfo.RouteValueDictionary.Add("count", count);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult GetAllImagesInMemBoxPaged(int memBoxId, int page, int count) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.GetAllImagesInMemBoxPaged);
            callInfo.RouteValueDictionary.Add("memBoxId", memBoxId);
            callInfo.RouteValueDictionary.Add("page", page);
            callInfo.RouteValueDictionary.Add("count", count);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult GetAllMemoryBoxesByUserId(System.Guid userId) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.GetAllMemoryBoxesByUserId);
            callInfo.RouteValueDictionary.Add("userId", userId);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult GetAllMemoryBoxesByUserIdandEventId(System.Guid userId, int eventId) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.GetAllMemoryBoxesByUserIdandEventId);
            callInfo.RouteValueDictionary.Add("userId", userId);
            callInfo.RouteValueDictionary.Add("eventId", eventId);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult GeckoGetUserGrowthDayOverDay() {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.GeckoGetUserGrowthDayOverDay);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult GeckoGetUserGrowthLastWeek() {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.GeckoGetUserGrowthLastWeek);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult GeckoGetUserGrowthLastMonth() {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.GeckoGetUserGrowthLastMonth);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult GeckoGetDailyUserGrowthLastMonth() {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.GeckoGetDailyUserGrowthLastMonth);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult GeckoEventCount() {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.GeckoEventCount);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult GeckoActiveEventCount() {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.GeckoActiveEventCount);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult GeckoCollectingEventCount() {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.GeckoCollectingEventCount);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult GeckoEventCountRAG() {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.GeckoEventCountRAG);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult GeckoGetEventGrowthDayOverDay() {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.GeckoGetEventGrowthDayOverDay);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult GeckoGetEventGrowthLastWeek() {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.GeckoGetEventGrowthLastWeek);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult GeckoGetEventGrowthLastMonth() {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.GeckoGetEventGrowthLastMonth);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult GeckoDailyUniqueActiveUsers() {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.GeckoDailyUniqueActiveUsers);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult GeckoMonthlyActiveUsers() {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.GeckoMonthlyActiveUsers);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult GeckoTweetCount() {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.GeckoTweetCount);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult GeckoPhotoCount() {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.GeckoPhotoCount);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult GeckoEpiloggerWebsiteStatus() {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.GeckoEpiloggerWebsiteStatus);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult GeckoEpiloggerServiceStatus() {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.GeckoEpiloggerServiceStatus);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult GeckoNumberOfTweetsInTheLastHour() {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.GeckoNumberOfTweetsInTheLastHour);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult GeckoGetTweetGrowthLast24Hours() {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.GeckoGetTweetGrowthLast24Hours);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult GeckoTopEventByUserActivity() {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.GeckoTopEventByUserActivity);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult ShortenUrlEPL(string url) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.ShortenUrlEPL);
            callInfo.RouteValueDictionary.Add("url", url);
            return callInfo;
        }

        public override System.Web.Mvc.JsonResult EventList(System.Collections.Generic.List<Epilogger.Data.Event> items) {
            var callInfo = new T4MVC_JsonResult(Area, Name, ActionNames.EventList);
            callInfo.RouteValueDictionary.Add("items", items);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591
